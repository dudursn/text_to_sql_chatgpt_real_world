{
    "queries": [
        {
            "question": "What is the area of Thailand?",
            "tables": [
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.AREA\nFROM MONDIAL_COUNTRY\nWHERE MONDIAL_COUNTRY.NAME ilike '%Thailand%'",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.AREA\nFROM MONDIAL_COUNTRY\nWHERE UPPER(MONDIAL_COUNTRY.NAME) LIKE UPPER('%Thailand%')"
        },
        {
            "question": "What are the provinces with an area greater than 10000?",
            "tables": [
                "mondial_province"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"CAPPROV\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"POPULATION\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"CAPITAL\" VARCHAR(50), \n\t\"CAPPROV\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT SUM(AREA) AS total_area\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE \"AREA\" > '10000'",
            "sql_coder_oracle": "SELECT SUM(AREA) AS total_area\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE AREA > 10000"
        },
        {
            "question": "What are the languages spoken in Poland?",
            "tables": [
                "mondial_language",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"mondial_gpt\".\"mondial_language\" \n(\t\"country\" VARCHAR(4), \n\t\"name\" VARCHAR(50), \n\t\"percentage\" NUMERIC, \n\t\"meta_repcol\" VARCHAR(4000)\n);\n\nCREATE TABLE \"mondial_gpt\".\"mondial_country\" \n(\t\"name\" VARCHAR(50), \n\t\"code\" VARCHAR(4), \n\t\"capital\" VARCHAR(50), \n\t\"province\" VARCHAR(50), \n\t\"area\" NUMERIC, \n\t\"population\" NUMERIC, \n\t\"meta_repcol\" VARCHAR(4000)\n);\n",
            "sql_coder": "\nSELECT name\nFROM mondial_gpt.mondial_country\nWHERE name ilike '%Poland%'",
            "sql_coder_oracle": "SELECT name\nFROM mondial_gpt.mondial_country\nWHERE UPPER(name) LIKE '%POLAND%'"
        },
        {
            "question": "How deep is Lake Kariba?",
            "tables": [
                "mondial_lake"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LAKE\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"DEPTH\" NUMBER, \n\t\"HEIGHT\" NUMBER, \n\t\"TYPE\" VARCHAR2(12 BYTE), \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LAKE\" \n(\n    \"NAME\" VARCHAR(50),\n    \"RIVER\" VARCHAR(50),\n    \"AREA\" NUMERIC,\n    \"ELEVATION\" NUMERIC,\n    \"DEPTH\" NUMERIC,\n    \"HEIGHT\" NUMERIC,\n    \"TYPE\" VARCHAR(12),\n    \"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\",\n    \"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT \"DEPTH\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_LAKE\"\nWHERE \"NAME\" ILIKE '%Lake%Kariba%'",
            "sql_coder_oracle": "SELECT \"DEPTH\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_LAKE\"\nWHERE LOWER(\"NAME\") LIKE '%lake%kariba%'"
        },
        {
            "question": "What is the total of provinces of Netherlands?",
            "tables": [
                "mondial_province",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"CAPPROV\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"POPULATION\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"CAPITAL\" VARCHAR(50), \n\t\"CAPPROV\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC,  \n\t\"POPULATION\" NUMERIC,\n\t\"META_REPCOL\" VARCHAR(400)\n   );",
            "sql_coder": "\nSELECT COUNT(*) AS total_provinces\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE \"COUNTRY\" = 'NL';",
            "sql_coder_oracle": "SELECT COUNT(*) AS total_provinces\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE COUNTRY = 'NL';"
        },
        {
            "question": "What is the percentage of religious people are hindu in thailand?",
            "tables": [
                "mondial_religion",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RELIGION\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RELIGION\"\n(\n  \"COUNTRY\" VARCHAR(4),\n  \"NAME\" VARCHAR(50),\n  \"PERCENTAGE\" NUMERIC,\n  \"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\"\n(\n  \"NAME\" VARCHAR(50),\n  \"CODE\" VARCHAR(4),\n  \"CAPITAL\" VARCHAR(50),\n  \"PROVINCE\" VARCHAR(50),\n  \"AREA\" NUMERIC,\n  \"POPULATION\" NUMERIC,\n  \"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT MONDIAL_RELIGION.PERCENTAGE\nFROM MONDIAL_RELIGION\nWHERE MONDIAL_RELIGION.COUNTRY = 'THA'\n  AND MONDIAL_RELIGION.NAME = 'Hindu';",
            "sql_coder_oracle": "SELECT MONDIAL_RELIGION.PERCENTAGE\nFROM MONDIAL_RELIGION\nWHERE MONDIAL_RELIGION.COUNTRY = 'THA'\n  AND MONDIAL_RELIGION.NAME = 'Hindu';"
        },
        {
            "question": "List the number of provinces each river flows through.",
            "tables": [
                "river",
                "geo_river"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"RIVER\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"LAKE\" VARCHAR2(50 BYTE), \n\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"LENGTH\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"MOUNTAINS\" VARCHAR2(50 BYTE), \n\t\"SOURCEELEVATION\" NUMBER, \n\t\"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"ESTUARYELEVATION\" NUMBER\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"GEO_RIVER\" \n   (\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"RIVER\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"RIVER\" VARCHAR(50), \n\t\"LAKE\" VARCHAR(50), \n\t\"SEA\" VARCHAR(50), \n\t\"LENGTH\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\", \n\t\"MOUNTAINS\" VARCHAR(50), \n\t\"SOURCEELEVATION\" NUMERIC, \n\t\"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\", \n\t\"ESTUARYELEVATION\" NUMERIC\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"GEO_RIVER\" \n   (\t\"RIVER\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50)\n   );",
            "sql_coder": "\nSELECT river,\n       COUNT(province) AS number_of_provinces\nFROM geo_river\nGROUP BY river;",
            "sql_coder_oracle": "SELECT river,\n       COUNT(province) AS number_of_provinces\nFROM geo_river\nGROUP BY river;"
        },
        {
            "question": "Find all countries that became independent between 8/1/1910 and 8/1/1950.",
            "tables": [
                "mondial_country",
                "mondial_politics"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POLITICS\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"INDEPENDENCE\" DATE, \n\t\"WASDEPENDENT\" VARCHAR2(50 BYTE), \n\t\"DEPENDENT\" VARCHAR2(4 BYTE), \n\t\"GOVERNMENT\" VARCHAR2(120 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE mondial_gpt.mondial_country\n(\n    name VARCHAR(50),\n    code VARCHAR(4),\n    capital VARCHAR(50),\n    province VARCHAR(50),\n    area NUMERIC,\n    population NUMERIC,\n    meta_repcol VARCHAR(4000)\n);\n\nCREATE TABLE mondial_gpt.mondial_politics\n(\n    country VARCHAR(4),\n    independence DATE,\n    wasdependent VARCHAR(50),\n    dependent VARCHAR(4),\n    government VARCHAR(120),\n    meta_repcol VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT name\nFROM mondial_gpt.mondial_country\nWHERE independence BETWEEN '1910-08-01' AND '1950-08-01'\nORDER BY name NULLS LAST;",
            "sql_coder_oracle": "SELECT name\nFROM mondial_gpt.mondial_country\nWHERE independence BETWEEN TO_DATE('1910-08-01', 'YYYY-MM-DD') AND TO_DATE('1950-08-01', 'YYYY-MM-DD')\nORDER BY name NULLS LAST;"
        },
        {
            "question": "What are the cities of Cuba?",
            "tables": [
                "mondial_city",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"POPULATION\" NUMERIC, \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC,\n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT \"MONDIAL_GPT\".\"MONDIAL_CITY\".\"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_CITY\"\nWHERE \"MONDIAL_GPT\".\"MONDIAL_CITY\".\"COUNTRY\" = 'Cuba'",
            "sql_coder_oracle": "SELECT \"MONDIAL_GPT\".\"MONDIAL_CITY\".\"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_CITY\"\nWHERE \"MONDIAL_GPT\".\"MONDIAL_CITY\".\"COUNTRY\" = 'Cuba'"
        },
        {
            "question": "What is the capital of Georgia?",
            "tables": [
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\" ;",
            "sql_coder": "\nSELECT CAPITAL\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nWHERE \"NAME\" ILIKE '%Georgia%'",
            "sql_coder_oracle": "SELECT CAPITAL\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nWHERE UPPER(\"NAME\") LIKE '%GEORGIA%'"
        },
        {
            "question": "How many provinces have areas greater than 1000 in Niger?",
            "tables": [
                "mondial_province",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"CAPPROV\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"POPULATION\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"CAPITAL\" VARCHAR(50), \n\t\"CAPPROV\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT COUNT(*)\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE \"AREA\" > '1000'\n  AND \"COUNTRY\" = 'NG'",
            "sql_coder_oracle": "SELECT COUNT(*)\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE AREA > 1000\n  AND COUNTRY = 'NG'"
        },
        {
            "question": "Tell me about the country with the area largest.",
            "tables": [
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n(\t\n    \"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n) TABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT MAX(AREA)\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nWHERE \"NAME\" ILIKE '%Thailand%'",
            "sql_coder_oracle": "SELECT MAX(AREA)\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nWHERE UPPER(\"NAME\") LIKE UPPER('%Thailand%')"
        },
        {
            "question": "What is the host province and year of establishment of the organization \"International Energy Agency\"?",
            "tables": [
                "mondial_organization"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ORGANIZATION\" \n   (\t\"ABBREVIATION\" VARCHAR2(12 BYTE), \n\t\"NAME\" VARCHAR2(100 BYTE), \n\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"ESTABLISHED\" DATE, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ORGANIZATION\" \n(\n\t\"ABBREVIATION\" VARCHAR(12), \n\t\"NAME\" VARCHAR(100), \n\t\"CITY\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4),  \n\t\"PROVINCE\" VARCHAR(50), \n\t\"ESTABLISHED\" DATE, \n\t\"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT MONDIAL_ORGANIZATION.PROVINCE,\n       EXTRACT(YEAR\n               FROM MONDIAL_ORGANIZATION.ESTABLISHED) AS YEAR_ESTABLISHED\nFROM MONDIAL_ORGANIZATION\nWHERE MONDIAL_ORGANIZATION.NAME = 'International Energy Agency';",
            "sql_coder_oracle": "SELECT MONDIAL_ORGANIZATION.PROVINCE,\n       EXTRACT(YEAR FROM MONDIAL_ORGANIZATION.ESTABLISHED) AS YEAR_ESTABLISHED\nFROM MONDIAL_ORGANIZATION\nWHERE MONDIAL_ORGANIZATION.NAME = 'International Energy Agency';"
        },
        {
            "question": "Find the name of all mountains whose elevation is higher than 1000.",
            "tables": [
                "mondial_mountain"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_MOUNTAIN\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"MOUNTAINS\" VARCHAR2(50 BYTE), \n\t\"ELEVATION\" NUMBER, \n\t\"TYPE\" VARCHAR2(10 BYTE), \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE MONDIAL_GPT.MONDIAL_MOUNTAIN \n   (\tNAME VARCHAR(50), \n\tMOUNTAINS VARCHAR(50), \n\tELEVATION NUMERIC, \n\tTYPE VARCHAR(10), \n\tCOORDINATES GEOCOORD,\n\tMETA_REPCOL VARCHAR(4000)\n   )\nTABLESPACE MONDIAL_GPT;\nPlease note, PostgreSQL does not support all Oracle features one by one ( these are two different systems). There might be a need for more complex transformation or redesign in some cases.\nIn this case, \"PCTFREE\", \"PCTUSED\", \"INITRANS\", \"MAXTRANS\", \"NOCOMPRESS\", \"LOGGING\", \"STORAGE\" and \"BUFFER_POOL\", \"FLASH_CACHE\", \"CELL_FLASH_CACHE\" are Oracle specific storage parameters that are not available in PostgreSQL. They are not needed in the PostgreSQL CREATE TABLE statement.\nHere, the \"GEOCOORD\" datatype should be properly defined in PostgreSQL. If it is a user-defined type in Oracle, you will need to set up an equivalent type in PostgreSQL.",
            "sql_coder": "\nSELECT name\nFROM MONDIAL_GPT.MONDIAL_MOUNTAIN\nWHERE elevation > 1000;",
            "sql_coder_oracle": "SELECT name\nFROM MONDIAL_GPT.MONDIAL_MOUNTAIN\nWHERE elevation > 1000;"
        },
        {
            "question": "Tell me the economy of the Caribbean Sea.",
            "tables": [
                "mondial_economy",
                "mondial_country",
                "mondial_geo_sea",
                "mondial_sea"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ECONOMY\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"GDP\" NUMBER, \n\t\"AGRICULTURE\" NUMBER, \n\t\"SERVICE\" NUMBER, \n\t\"INDUSTRY\" NUMBER, \n\t\"INFLATION\" NUMBER, \n\t\"UNEMPLOYMENT\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n   (\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"DEPTH\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ECONOMY\" \n(\n\"COUNTRY\" VARCHAR(4), \n\"GDP\" NUMERIC, \n\"AGRICULTURE\" NUMERIC, \n\"SERVICE\" NUMERIC, \n\"INDUSTRY\" NUMERIC, \n\"INFLATION\" NUMERIC, \n\"UNEMPLOYMENT\" NUMERIC, \n\"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n(\n\"NAME\" VARCHAR(50), \n\"CODE\" VARCHAR(4), \n\"CAPITAL\" VARCHAR(50), \n\"PROVINCE\" VARCHAR(50), \n\"AREA\" NUMERIC, \n\"POPULATION\" NUMERIC, \n\"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n(\n\"SEA\" VARCHAR(50), \n\"COUNTRY\" VARCHAR(4), \n\"PROVINCE\" VARCHAR(50), \n\"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\" \n(\n\"NAME\" VARCHAR(50), \n\"AREA\" NUMERIC, \n\"DEPTH\" NUMERIC, \n\"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT MONDIAL_ECONOMY.GDP\nFROM MONDIAL_ECONOMY\nJOIN MONDIAL_GEO_SEA ON MONDIAL_ECONOMY.COUNTRY = MONDIAL_GEO_SEA.COUNTRY\nWHERE MONDIAL_GEO_SEA.SEA = 'Caribbean Sea'",
            "sql_coder_oracle": "SELECT MONDIAL_ECONOMY.GDP\nFROM MONDIAL_ECONOMY\nINNER JOIN MONDIAL_GEO_SEA ON MONDIAL_ECONOMY.COUNTRY = MONDIAL_GEO_SEA.COUNTRY\nWHERE MONDIAL_GEO_SEA.SEA = 'Caribbean Sea'"
        },
        {
            "question": "Show the cities with longitude between 0 and 6.",
            "tables": [
                "mondial_city"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"POPULATION\" NUMERIC, \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n   \nNote: Postgres does not have the exact equivalent of some of Oracle's tablespace or segment attributes such as PCTFREE, PCTUSED, INITRANS MAXTRANS, STORAGE parameters and TABLESPACE. All these have been omitted in the equivalent Postgres statement.",
            "sql_coder": "\nSELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_CITY\"\nWHERE \"LONGITUDE\" BETWEEN 0 AND 6;",
            "sql_coder_oracle": "SELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_CITY\"\nWHERE \"LONGITUDE\" BETWEEN 0 AND 6;"
        },
        {
            "question": "Select cities whose population is greater than 100000, altitude greater than 2500, and the country you belong to has population growth greater than 1.",
            "tables": [
                "mondial_city",
                "mondial_country",
                "mondial_population"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POPULATION\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION_GROWTH\" NUMBER, \n\t\"INFANT_MORTALITY\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"POPULATION\" NUMERIC, \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n   \nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POPULATION\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"POPULATION_GROWTH\" NUMERIC, \n\t\"INFANT_MORTALITY\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_CITY.NAME\nFROM MONDIAL_CITY\nJOIN MONDIAL_COUNTRY ON MONDIAL_CITY.COUNTRY = MONDIAL_COUNTRY.CODE\nJOIN MONDIAL_POPULATION ON MONDIAL_COUNTRY.CODE = MONDIAL_POPULATION.COUNTRY\nWHERE MONDIAL_CITY.POPULATION > 100000\n  AND MONDIAL_CITY.ELEVATION > 2500\n  AND MONDIAL_POPULATION.POPULATION_GROWTH > 1;",
            "sql_coder_oracle": "SELECT MONDIAL_CITY.NAME\nFROM MONDIAL_CITY\nINNER JOIN MONDIAL_COUNTRY ON MONDIAL_CITY.COUNTRY = MONDIAL_COUNTRY.CODE\nINNER JOIN MONDIAL_POPULATION ON MONDIAL_COUNTRY.CODE = MONDIAL_POPULATION.COUNTRY\nWHERE MONDIAL_CITY.POPULATION > 100000\n  AND MONDIAL_CITY.ELEVATION > 2500\n  AND MONDIAL_POPULATION.POPULATION_GROWTH > 1;"
        },
        {
            "question": "Show all the different types of government.",
            "tables": [
                "mondial_politics"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POLITICS\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"INDEPENDENCE\" DATE, \n\t\"WASDEPENDENT\" VARCHAR2(50 BYTE), \n\t\"DEPENDENT\" VARCHAR2(4 BYTE), \n\t\"GOVERNMENT\" VARCHAR2(120 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POLITICS\" \n(\n\t\"COUNTRY\" VARCHAR(4), \n\t\"INDEPENDENCE\" DATE, \n\t\"WASDEPENDENT\" VARCHAR(50), \n\t\"DEPENDENT\" VARCHAR(4), \n\t\"GOVERNMENT\" VARCHAR(120), \n\t\"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT DISTINCT MONDIAL_POLITICS.GOVERNMENT\nFROM MONDIAL_POLITICS\nWHERE MONDIAL_POLITICS.COUNTRY = 'THA'\nORDER BY MONDIAL_POLITICS.GOVERNMENT NULLS LAST;",
            "sql_coder_oracle": "SELECT DISTINCT MONDIAL_POLITICS.GOVERNMENT\nFROM MONDIAL_POLITICS\nWHERE MONDIAL_POLITICS.COUNTRY = 'THA'\nORDER BY CASE WHEN MONDIAL_POLITICS.GOVERNMENT IS NULL THEN 1 ELSE 0 END, MONDIAL_POLITICS.GOVERNMENT;"
        },
        {
            "question": "List all provinces in Germany",
            "tables": [
                "mondial_province",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"CAPPROV\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"POPULATION\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"CAPITAL\" VARCHAR(50), \n\t\"CAPPROV\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\n    \"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_GPT.MONDIAL_PROVINCE.name\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE MONDIAL_GPT.MONDIAL_PROVINCE.country = 'Germany'\nORDER BY MONDIAL_GPT.MONDIAL_PROVINCE.name NULLS LAST;",
            "sql_coder_oracle": "SELECT MONDIAL_GPT.MONDIAL_PROVINCE.name\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE MONDIAL_GPT.MONDIAL_PROVINCE.country = 'Germany'\nORDER BY CASE WHEN MONDIAL_GPT.MONDIAL_PROVINCE.name IS NULL THEN 1 ELSE 0 END, MONDIAL_GPT.MONDIAL_PROVINCE.name;"
        },
        {
            "question": "What is the percentage of mulatto ethnicity in Brazil?",
            "tables": [
                "mondial_ethnicgroup",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ETHNICGROUP\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(200 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ETHNICGROUP\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"NAME\" VARCHAR(50), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(200)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_ETHNICGROUP.PERCENTAGE\nFROM MONDIAL_ETHNICGROUP\nWHERE MONDIAL_ETHNICGROUP.COUNTRY = 'BR'\n  AND MONDIAL_ETHNICGROUP.NAME ILIKE '%mulatto%'",
            "sql_coder_oracle": "SELECT MONDIAL_ETHNICGROUP.PERCENTAGE\nFROM MONDIAL_ETHNICGROUP\nWHERE MONDIAL_ETHNICGROUP.COUNTRY = 'BR'\n  AND UPPER(MONDIAL_ETHNICGROUP.NAME) LIKE UPPER('%mulatto%')"
        },
        {
            "question": "How many cities have populations less than 1000?",
            "tables": [
                "mondial_city"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\"\n(\n\t\"NAME\" VARCHAR(50),\n\t\"COUNTRY\" VARCHAR(4),\n\t\"PROVINCE\" VARCHAR(50),\n\t\"POPULATION\" NUMERIC,\n\t\"LATITUDE\" NUMERIC,\n\t\"LONGITUDE\" NUMERIC,\n\t\"ELEVATION\" NUMERIC,\n\t\"META_REPCOL\" VARCHAR(4000)\n)\nWITH (\n   OIDS = FALSE\n)\nTABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT COUNT(*)\nFROM MONDIAL_CITY\nWHERE POPULATION < 1000;",
            "sql_coder_oracle": "SELECT COUNT(*)\nFROM MONDIAL_CITY\nWHERE POPULATION < 1000;"
        },
        {
            "question": "What is the average elevation of airports in America?",
            "tables": [
                "mondial_airport",
                "mondial_country",
                "mondial_encompasses",
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\" \n   (\t\"NAME\" VARCHAR2(100 BYTE), \n\t\"IATACODE\" VARCHAR2(3 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"ISLAND\" VARCHAR2(50 BYTE), \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"GMTOFFSET\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_AIRPORT\" \n(\n\t\"NAME\" VARCHAR(100), \n\t\"IATACODE\" VARCHAR(3), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"CITY\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"ISLAND\" VARCHAR(50), \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"GMTOFFSET\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_COUNTRY\" \n(\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_ENCOMPASSES\" \n(\n\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_CONTINENT\" \n(\n\t\"NAME\" VARCHAR(20), \n\t\"AREA\" NUMERIC(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT AVG(\"ELEVATION\") AS average_elevation\nFROM \"MONDIAL_AIRPORT\"\nWHERE \"COUNTRY\" ILIKE '%America%';",
            "sql_coder_oracle": "SELECT AVG(\"ELEVATION\") AS average_elevation\nFROM \"MONDIAL_AIRPORT\"\nWHERE UPPER(\"COUNTRY\") LIKE '%AMERICA%';"
        },
        {
            "question": "How many countries are adjacent to (or ecompassed by) the Caribbean Sea?",
            "tables": [
                "mondial_geo_sea",
                "mondial_encompasses"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n   (\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n   (\t\"SEA\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT COUNT(DISTINCT MONDIAL_GEO_SEA.COUNTRY) AS adjacent_countries\nFROM MONDIAL_GEO_SEA\nWHERE MONDIAL_GEO_SEA.SEA = 'Caribbean Sea';",
            "sql_coder_oracle": "SELECT COUNT(DISTINCT MONDIAL_GEO_SEA.COUNTRY) AS adjacent_countries\nFROM MONDIAL_GEO_SEA\nWHERE MONDIAL_GEO_SEA.SEA = 'Caribbean Sea';"
        },
        {
            "question": "How much area do the countries that are adjacent to (or encompassed by) the Caribbean Sea cover in total?",
            "tables": [
                "mondial_Country",
                "mondial_encompasses",
                "mondial_geo_sea"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n   (\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n(\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n(\n\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n(\n\t\"SEA\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.name, SUM(MONDIAL_COUNTRY.population) AS total_population FROM MONDIAL_COUNTRY JOIN MONDIAL_GEO_SEA ON MONDIAL_COUNTRY.code = MONDIAL_GEO_SEA.country WHERE MONDIAL_GEO_SEA.sea = 'Caribbean Sea' GROUP BY MONDIAL_COUNTRY.name ORDER BY total_population DESC NULLS LAST;\n"
        },
        {
            "question": "For all countries, give the sum of the population of all its neighbors",
            "tables": [
                "mondial_Country",
                "mondial_Borders",
                "mondial_Country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_BORDERS\" \n   (\t\"COUNTRY1\" VARCHAR2(4 BYTE), \n\t\"COUNTRY2\" VARCHAR2(4 BYTE), \n\t\"LENGTH\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_BORDERS\" \n   (\t\"COUNTRY1\" VARCHAR(4), \n\t\"COUNTRY2\" VARCHAR(4), \n\t\"LENGTH\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.name, SUM(MONDIAL_COUNTRY.population) AS total_population FROM MONDIAL_COUNTRY JOIN MONDIAL_BORDERS ON (MONDIAL_COUNTRY.code = MONDIAL_BORDERS.country1 OR MONDIAL_COUNTRY.code = MONDIAL_BORDERS.country2) GROUP BY MONDIAL_COUNTRY.name ORDER BY total_population DESC NULLS LAST;"
        },
        {
            "question": "What mountains are on the island of Borneo?",
            "tables": [
                "mondial_mountainonisland"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_MOUNTAINONISLAND\" \n   (\t\"MOUNTAIN\" VARCHAR2(50 BYTE), \n\t\"ISLAND\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_MOUNTAINONISLAND\" \n(\n\t\"MOUNTAIN\" VARCHAR(50), \n\t\"ISLAND\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n) \nWITH (OIDS=FALSE);",
            "sql_coder": "\nSELECT MONDIAL_GPT.MONDIAL_MOUNTAINONISLAND.MOUNTAIN\nFROM MONDIAL_GPT.MONDIAL_MOUNTAINONISLAND\nWHERE MONDIAL_GPT.MONDIAL_MOUNTAINONISLAND.ISLAND = 'Borneo'\nORDER BY MONDIAL_GPT.MONDIAL_MOUNTAINONISLAND.MOUNTAIN NULLS LAST;",
            "sql_coder_oracle": "SELECT MONDIAL_GPT.MONDIAL_MOUNTAINONISLAND.MOUNTAIN\nFROM MONDIAL_GPT.MONDIAL_MOUNTAINONISLAND\nWHERE MONDIAL_GPT.MONDIAL_MOUNTAINONISLAND.ISLAND = 'Borneo'\nORDER BY CASE WHEN MONDIAL_GPT.MONDIAL_MOUNTAINONISLAND.MOUNTAIN IS NULL THEN 1 ELSE 0 END, MONDIAL_GPT.MONDIAL_MOUNTAINONISLAND.MOUNTAIN;"
        },
        {
            "question": "Provide the name and total population of the country with the smallest area.",
            "tables": [
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT name,\n       population\nFROM MONDIAL_COUNTRY\nWHERE name ilike '%Thailand%'\nORDER BY area ASC NULLS LAST\nLIMIT 1;",
            "sql_coder_oracle": "SELECT name, population \nFROM MONDIAL_COUNTRY \nWHERE LOWER(name) LIKE LOWER('%Thailand%') \nORDER BY NVL(area,0) ASC \nFETCH FIRST 1 ROWS ONLY;"
        },
        {
            "question": "The codes of all countries for which at least one river that originates in this country has its estuary in a neighboring country.",
            "tables": [
                "mondial_geo_estuary"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_ESTUARY\" \n   (\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_ESTUARY\" \n(\n\t\"RIVER\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n) TABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT e.COUNTRY\nFROM MONDIAL_GEO_ESTUARY e\nWHERE e.RIVER IN\n    (SELECT r.RIVER\n     FROM MONDIAL_GEO_RIVER r\n     WHERE r.COUNTRY = 'THA');",
            "sql_coder_oracle": "SELECT e.COUNTRY\nFROM MONDIAL_GEO_ESTUARY e\nWHERE e.RIVER IN\n    (SELECT r.RIVER\n     FROM MONDIAL_GEO_RIVER r\n     WHERE r.COUNTRY = 'THA');"
        },
        {
            "question": "The codes of all countries where at least one mountain is located in each of their provinces",
            "tables": [
                "mondial_country",
                "mondial_province",
                "mondial_geo_mountain"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"CAPPROV\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_MOUNTAIN\" \n   (\t\"MOUNTAIN\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"POPULATION\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"CAPITAL\" VARCHAR(50), \n\t\"CAPPROV\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_MOUNTAIN\" \n   (\t\"MOUNTAIN\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.CODE\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_GEO_MOUNTAIN ON MONDIAL_COUNTRY.CODE = MONDIAL_GEO_MOUNTAIN.COUNTRY\nGROUP BY MONDIAL_COUNTRY.CODE;",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.CODE\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_GEO_MOUNTAIN ON MONDIAL_COUNTRY.CODE = MONDIAL_GEO_MOUNTAIN.COUNTRY\nGROUP BY MONDIAL_COUNTRY.CODE;"
        },
        {
            "question": "The code and total border lengths of all countries with at least one border.",
            "tables": [
                "mondial_borders",
                "mondial_borders"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_BORDERS\" \n   (\t\"COUNTRY1\" VARCHAR2(4 BYTE), \n\t\"COUNTRY2\" VARCHAR2(4 BYTE), \n\t\"LENGTH\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_BORDERS\" \n   (\t\"COUNTRY1\" VARCHAR2(4 BYTE), \n\t\"COUNTRY2\" VARCHAR2(4 BYTE), \n\t\"LENGTH\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_BORDERS\" \n(\n\t\"COUNTRY1\" VARCHAR(4), \n\t\"COUNTRY2\" VARCHAR(4), \n\t\"LENGTH\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n) \nWITH (fillfactor=40);",
            "sql_coder": "\nSELECT MONDIAL_BORDERS.COUNTRY1,\n       SUM(MONDIAL_BORDERS.LENGTH) AS total_border_length\nFROM MONDIAL_BORDERS\nGROUP BY MONDIAL_BORDERS.COUNTRY1\nHAVING COUNT(MONDIAL_BORDERS.COUNTRY1) >= 1;",
            "sql_coder_oracle": "SELECT MONDIAL_BORDERS.COUNTRY1, \n       SUM(MONDIAL_BORDERS.LENGTH) AS total_border_length\nFROM MONDIAL_BORDERS\nGROUP BY MONDIAL_BORDERS.COUNTRY1\nHAVING COUNT(MONDIAL_BORDERS.COUNTRY1) >= 1;"
        },
        {
            "question": "The names and codes of all countries in which at least one river originates.",
            "tables": [
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) WITH (OIDS=FALSE);",
            "sql_coder": "\nSELECT \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\".\"NAME\",\n       \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\".\"CODE\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\"\nWHERE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\".\"NAME\" ILIKE '%Thailand%'",
            "sql_coder_oracle": "SELECT \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\".\"NAME\",\n       \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\".\"CODE\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\"\nWHERE UPPER(\"MONDIAL_GPT\".\"MONDIAL_COUNTRY\".\"NAME\") LIKE UPPER('%Thailand%')"
        },
        {
            "question": "What is the area and country of the Chatanga River?",
            "tables": [
                "mondial_geo_river",
                "mondial_country",
                "mondial_river"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_RIVER\" \n   (\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"LAKE\" VARCHAR2(50 BYTE), \n\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"LENGTH\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"MOUNTAINS\" VARCHAR2(50 BYTE), \n\t\"SOURCEELEVATION\" NUMBER, \n\t\"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"ESTUARYELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_RIVER\"\n(\n    \"RIVER\" varchar(50),\n    \"COUNTRY\" varchar(4),\n    \"PROVINCE\" varchar(50),\n    \"META_REPCOL\" varchar(4000)\n);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\"\n(\n    \"NAME\" varchar(50),\n    \"CODE\" varchar(4),\n    \"CAPITAL\" varchar(50),\n    \"PROVINCE\" varchar(50),\n    \"AREA\" double precision,\n    \"POPULATION\" double precision,\n    \"META_REPCOL\" varchar(4000)\n);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\"\n(\n    \"NAME\" varchar(50),\n    \"RIVER\" varchar(50),\n    \"LAKE\" varchar(50),\n    \"SEA\" varchar(50),\n    \"LENGTH\" double precision,\n    \"AREA\" double precision,\n    \"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\",\n    \"MOUNTAINS\" varchar(50),\n    \"SOURCEELEVATION\" double precision,\n    \"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\",\n    \"ESTUARYELEVATION\" double precision,\n    \"META_REPCOL\" varchar(4000)\n);",
            "sql_coder": "\nSELECT \"AREA\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\"\nWHERE \"NAME\" ILIKE '%Thailand%'",
            "sql_coder_oracle": "SELECT \"AREA\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\"\nWHERE UPPER(\"NAME\") LIKE UPPER('%Thailand%')"
        },
        {
            "question": "Show the Airports with elevation more than 3000",
            "tables": [
                "mondial_airport"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\" \n   (\t\"NAME\" VARCHAR2(100 BYTE), \n\t\"IATACODE\" VARCHAR2(3 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"ISLAND\" VARCHAR2(50 BYTE), \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"GMTOFFSET\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\" \n   (\n\t\"NAME\" VARCHAR(100), \n\t\"IATACODE\" VARCHAR(3), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"CITY\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"ISLAND\" VARCHAR(50), \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"GMTOFFSET\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT COUNT(*)\nFROM MONDIAL_GPT.MONDIAL_AIRPORT\nWHERE \"ELEVATION\" > '3000'",
            "sql_coder_oracle": "SELECT COUNT(*)\nFROM MONDIAL_GPT.MONDIAL_AIRPORT\nWHERE ELEVATION > 3000"
        },
        {
            "question": "What are the religions practiced in Mexico?",
            "tables": [
                "mondial_religion",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RELIGION\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RELIGION\" \n   (\n\t\"COUNTRY\" VARCHAR(4), \n\t\"NAME\" VARCHAR(50), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n   \nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_GPT.MONDIAL_RELIGION.NAME\nFROM MONDIAL_GPT.MONDIAL_RELIGION\nWHERE MONDIAL_GPT.MONDIAL_RELIGION.COUNTRY = 'MEX'",
            "sql_coder_oracle": "SELECT MONDIAL_GPT.MONDIAL_RELIGION.NAME\nFROM MONDIAL_GPT.MONDIAL_RELIGION\nWHERE MONDIAL_GPT.MONDIAL_RELIGION.COUNTRY = 'MEX'"
        },
        {
            "question": "Show all rivers that do not flow into the sea.",
            "tables": [
                "mondial_River"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"LAKE\" VARCHAR2(50 BYTE), \n\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"LENGTH\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"MOUNTAINS\" VARCHAR2(50 BYTE), \n\t\"SOURCEELEVATION\" NUMBER, \n\t\"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"ESTUARYELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\"\n(\n    \"NAME\" character varying(50),\n    \"RIVER\" character varying(50),\n    \"LAKE\" character varying(50),\n    \"SEA\" character varying(50),\n    \"LENGTH\" numeric,\n    \"AREA\" numeric,\n    \"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\",\n    \"MOUNTAINS\" character varying(50),\n    \"SOURCEELEVATION\" numeric,\n    \"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\",\n    \"ESTUARYELEVATION\" numeric,\n    \"META_REPCOL\" character varying(4000)\n)\nWITH (OIDS=FALSE);\nALTER TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\" OWNER TO postgres;\nCOMMENT ON TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\"\nIS 'MONDIAL_RIVER';",
            "sql_coder": "\nSELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_RIVER\"\nWHERE \"SEA\" IS NULL;",
            "sql_coder_oracle": "SELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_RIVER\"\nWHERE \"SEA\" IS NULL;"
        },
        {
            "question": "List African countries by number of neighbors.",
            "tables": [
                "mondial_country",
                "mondial_borders",
                "mondial_encompasses",
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_BORDERS\" \n   (\t\"COUNTRY1\" VARCHAR2(4 BYTE), \n\t\"COUNTRY2\" VARCHAR2(4 BYTE), \n\t\"LENGTH\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_COUNTRY\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_BORDERS\" \n   (\n\t\"COUNTRY1\" VARCHAR(4), \n\t\"COUNTRY2\" VARCHAR(4), \n\t\"LENGTH\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_ENCOMPASSES\" \n   (\n\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_CONTINENT\" \n   (\n\t\"NAME\" VARCHAR(20), \n\t\"AREA\" NUMERIC(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.name,\n       COUNT(DISTINCT MONDIAL_BORDERS.country2) AS neighbor_count\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_BORDERS ON MONDIAL_COUNTRY.code = MONDIAL_BORDERS.country1\nWHERE MONDIAL_COUNTRY.continent = 'Africa'\nGROUP BY MONDIAL_COUNTRY.name\nORDER BY neighbor_count DESC NULLS LAST;",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.name, \n       COUNT(DISTINCT MONDIAL_BORDERS.country2) AS neighbor_count \nFROM MONDIAL_COUNTRY \nJOIN MONDIAL_BORDERS ON MONDIAL_COUNTRY.code = MONDIAL_BORDERS.country1 \nWHERE MONDIAL_COUNTRY.continent = 'Africa' \nGROUP BY MONDIAL_COUNTRY.name \nORDER BY CASE WHEN neighbor_count IS NULL THEN 1 ELSE 0 END, neighbor_count DESC;"
        },
        {
            "question": "What is the average infant mortality rate for each continent?",
            "tables": [
                "mondial_continent",
                "mondial_encompasses",
                "mondial_population"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POPULATION\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION_GROWTH\" NUMBER, \n\t\"INFANT_MORTALITY\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR(20), \n\t\"AREA\" NUMERIC(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POPULATION\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"POPULATION_GROWTH\" NUMERIC, \n\t\"INFANT_MORTALITY\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_GPT.MONDIAL_CONTINENT.name,\n       AVG(MONDIAL_GPT.MONDIAL_POPULATION.infant_mortality) AS average_infant_mortality\nFROM MONDIAL_GPT.MONDIAL_CONTINENT\nJOIN MONDIAL_GPT.MONDIAL_ENCOMPASSES ON MONDIAL_GPT.MONDIAL_CONTINENT.name = MONDIAL_GPT.MONDIAL_ENCOMPASSES.continent\nJOIN MONDIAL_GPT.MONDIAL_POPULATION ON MONDIAL_GPT.MONDIAL_ENCOMPASSES.country = MONDIAL_GPT.MONDIAL_POPULATION.country\nGROUP BY MONDIAL_GPT.MONDIAL_CONTINENT.name\nORDER BY average_infant_mortality DESC NULLS LAST;",
            "sql_coder_oracle": "SELECT MONDIAL_GPT.MONDIAL_CONTINENT.name,\n       AVG(MONDIAL_GPT.MONDIAL_POPULATION.infant_mortality) AS average_infant_mortality\nFROM MONDIAL_GPT.MONDIAL_CONTINENT\nJOIN MONDIAL_GPT.MONDIAL_ENCOMPASSES ON MONDIAL_GPT.MONDIAL_CONTINENT.name = MONDIAL_GPT.MONDIAL_ENCOMPASSES.continent\nJOIN MONDIAL_GPT.MONDIAL_POPULATION ON MONDIAL_GPT.MONDIAL_ENCOMPASSES.country = MONDIAL_GPT.MONDIAL_POPULATION.country\nGROUP BY MONDIAL_GPT.MONDIAL_CONTINENT.name\nORDER BY AVG(MONDIAL_GPT.MONDIAL_POPULATION.infant_mortality) DESC NULLS LAST;"
        },
        {
            "question": "What is the average mortality rate of the countries in America without considering Brazil?",
            "tables": [
                "mondial_Country",
                "mondial_Population",
                "mondial_encompasses",
                "mondial_Continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POPULATION\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION_GROWTH\" NUMBER, \n\t\"INFANT_MORTALITY\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_COUNTRY\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_POPULATION\" \n   (\n\t\"COUNTRY\" VARCHAR(4), \n\t\"POPULATION_GROWTH\" NUMERIC, \n\t\"INFANT_MORTALITY\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_ENCOMPASSES\" \n   (\n\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_CONTINENT\" \n   (\n\t\"NAME\" VARCHAR(20), \n\t\"AREA\" NUMERIC(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT AVG(MONDIAL_POPULATION.INFANT_MORTALITY) AS average_mortality_rate\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_ENCOMPASSES ON MONDIAL_COUNTRY.CODE = MONDIAL_ENCOMPASSES.COUNTRY\nWHERE MONDIAL_COUNTRY.CONTINENT = 'America'\n  AND MONDIAL_COUNTRY.NAME!= 'Brazil';",
            "sql_coder_oracle": "SELECT AVG(MONDIAL_POPULATION.INFANT_MORTALITY) AS average_mortality_rate\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_ENCOMPASSES ON MONDIAL_COUNTRY.CODE = MONDIAL_ENCOMPASSES.COUNTRY\nWHERE MONDIAL_COUNTRY.CONTINENT = 'America'\n  AND MONDIAL_COUNTRY.NAME<> 'Brazil';"
        },
        {
            "question": "List seas with area greater than 8000 and depth less than 100.",
            "tables": [
                "mondial_sea"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"DEPTH\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\"\n   (\n        \"NAME\" VARCHAR(50), \n        \"AREA\" NUMERIC, \n        \"DEPTH\" NUMERIC,\n        \"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\";\n",
            "sql_coder": "\nSELECT \"AREA\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_SEA\"\nWHERE \"AREA\" > '8000'\n  AND \"DEPTH\" < '100'",
            "sql_coder_oracle": "SELECT \"AREA\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_SEA\"\nWHERE \"AREA\" > 8000\n  AND \"DEPTH\" < 100"
        },
        {
            "question": "How many mountains are there in Asia?",
            "tables": [
                "mondial_mountain",
                "mondial_geo_mountain",
                "mondial_country",
                "mondial_encompasses",
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_MOUNTAIN\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"MOUNTAINS\" VARCHAR2(50 BYTE), \n\t\"ELEVATION\" NUMBER, \n\t\"TYPE\" VARCHAR2(10 BYTE), \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_MOUNTAIN\" \n   (\t\"MOUNTAIN\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"mondial_mountain\" \n   (\"name\" VARCHAR(50), \n    \"mountains\" VARCHAR(50), \n    \"elevation\" NUMERIC, \n    \"type\" VARCHAR(10), \n    \"coordinates\" GEOCOORD, \n    \"meta_repcol\" VARCHAR(4000));\n\nCREATE TABLE \"mondial_geo_mountain\" \n   (\"mountain\" VARCHAR(50), \n    \"country\" VARCHAR(4), \n    \"province\" VARCHAR(50), \n    \"meta_repcol\" VARCHAR(4000));\n    \nCREATE TABLE \"mondial_country\" \n   (\"name\" VARCHAR(50), \n    \"code\" VARCHAR(4), \n    \"capital\" VARCHAR(50), \n    \"province\" VARCHAR(50), \n    \"area\" NUMERIC, \n    \"population\" NUMERIC, \n    \"meta_repcol\" VARCHAR(4000));\n\nCREATE TABLE \"mondial_encompasses\" \n   (\"country\" VARCHAR(4), \n    \"continent\" VARCHAR(20), \n    \"percentage\" NUMERIC, \n    \"meta_repcol\" VARCHAR(4000));\n    \nCREATE TABLE \"mondial_continent\" \n   (\"name\" VARCHAR(20), \n    \"area\" NUMERIC(10,0), \n    \"meta_repcol\" VARCHAR(4000));",
            "sql_coder": "\nSELECT COUNT(*)\nFROM mondial_geo_mountain\nWHERE country = 'AS';",
            "sql_coder_oracle": "SELECT COUNT(*)\nFROM mondial_geo_mountain\nWHERE country = 'AS';"
        },
        {
            "question": "How many countries that are close to the Mediterranean Sea?",
            "tables": [
                "mondial_country",
                "mondial_geo_sea",
                "mondial_sea"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n   (\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"DEPTH\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n   (\t\"SEA\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n   \nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"DEPTH\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT COUNT(DISTINCT MONDIAL_COUNTRY.COUNTRY) AS number_of_countries\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_GEO_SEA ON MONDIAL_COUNTRY.COUNTRY = MONDIAL_GEO_SEA.COUNTRY\nWHERE MONDIAL_GEO_SEA.SEA = 'Mediterranean Sea';",
            "sql_coder_oracle": "SELECT COUNT(DISTINCT MONDIAL_COUNTRY.COUNTRY) AS number_of_countries\nFROM MONDIAL_COUNTRY\nINNER JOIN MONDIAL_GEO_SEA ON MONDIAL_COUNTRY.COUNTRY = MONDIAL_GEO_SEA.COUNTRY\nWHERE MONDIAL_GEO_SEA.SEA = 'Mediterranean Sea';"
        },
        {
            "question": "Show the total for each type of government.",
            "tables": [
                "mondial_politics"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POLITICS\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"INDEPENDENCE\" DATE, \n\t\"WASDEPENDENT\" VARCHAR2(50 BYTE), \n\t\"DEPENDENT\" VARCHAR2(4 BYTE), \n\t\"GOVERNMENT\" VARCHAR2(120 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POLITICS\" \n(\n\t\"COUNTRY\" VARCHAR(4), \n\t\"INDEPENDENCE\" DATE, \n\t\"WASDEPENDENT\" VARCHAR(50), \n\t\"DEPENDENT\" VARCHAR(4), \n\t\"GOVERNMENT\" VARCHAR(120), \n\t\"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT MONDIAL_POLITICS.GOVERNMENT,\n       COUNT(*) AS COUNT\nFROM MONDIAL_POLITICS\nWHERE MONDIAL_POLITICS.COUNTRY = 'THA'\nGROUP BY MONDIAL_POLITICS.GOVERNMENT\nORDER BY COUNT DESC NULLS LAST;",
            "sql_coder_oracle": "SELECT MONDIAL_POLITICS.GOVERNMENT,\n       COUNT(*) AS COUNT\nFROM MONDIAL_POLITICS\nWHERE MONDIAL_POLITICS.COUNTRY = 'THA'\nGROUP BY MONDIAL_POLITICS.GOVERNMENT\nORDER BY COUNT(*) DESC;"
        },
        {
            "question": "Which province has the largest desert in the world?",
            "tables": [
                "mondial_geo_desert",
                "mondial_desert"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_DESERT\" \n   (\t\"DESERT\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_DESERT\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_DESERT\" \n(\n\t\"DESERT\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_DESERT\" \n(\n\t\"NAME\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\", \n\t\"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT MONDIAL_GEO_DESERT.PROVINCE\nFROM MONDIAL_GEO_DESERT\nWHERE MONDIAL_GEO_DESERT.DESERT = 'Desert'\nORDER BY MONDIAL_GEO_DESERT.AREA DESC NULLS LAST\nLIMIT 1;",
            "sql_coder_oracle": "SELECT MONDIAL_GEO_DESERT.PROVINCE\nFROM MONDIAL_GEO_DESERT\nWHERE MONDIAL_GEO_DESERT.DESERT = 'Desert'\nORDER BY DECODE(MONDIAL_GEO_DESERT.AREA, NULL, 1, 0), MONDIAL_GEO_DESERT.AREA DESC\nFETCH FIRST 1 ROWS ONLY;"
        },
        {
            "question": "What is the largest desert in the world?",
            "tables": [
                "mondial_desert"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_DESERT\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_DESERT\" \n(\n\t\"NAME\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\", \n\t\"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT MAX(AREA)\nFROM MONDIAL_GPT.MONDIAL_DESERT;",
            "sql_coder_oracle": "SELECT MAX(AREA)\nFROM MONDIAL_GPT.MONDIAL_DESERT;"
        },
        {
            "question": "List, for all continents, the amount of deserts on each.",
            "tables": [
                "mondial_geo_desert",
                "mondial_country",
                "mondial_encompasses",
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_DESERT\" \n   (\t\"DESERT\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"mondial_gpt\".\"mondial_geo_desert\"\n(\n    \"desert\" VARCHAR(50),\n    \"country\" VARCHAR(4),\n    \"province\" VARCHAR(50),\n    \"meta_repcol\" VARCHAR(4000)\n);\n\nCREATE TABLE \"mondial_gpt\".\"mondial_country\"\n(\n    \"name\" VARCHAR(50),\n    \"code\" VARCHAR(4),\n    \"capital\" VARCHAR(50),\n    \"province\" VARCHAR(50),\n    \"area\" NUMERIC,\n    \"population\" NUMERIC,\n    \"meta_repcol\" VARCHAR(4000)\n);\n\nCREATE TABLE \"mondial_gpt\".\"mondial_encompasses\"\n(\n    \"country\" VARCHAR(4),\n    \"continent\" VARCHAR(20),\n    \"percentage\" NUMERIC,\n    \"meta_repcol\" VARCHAR(4000)\n);\n\nCREATE TABLE \"mondial_gpt\".\"mondial_continent\"\n(\n    \"name\" VARCHAR(20),\n    \"area\" NUMERIC(10),\n    \"meta_repcol\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT mgd.continent,\n       COUNT(mgd.desert) AS number_of_deserts\nFROM mondial_geo_desert mgd\nGROUP BY mgd.continent;",
            "sql_coder_oracle": "SELECT mgd.continent,\n       COUNT(mgd.desert) AS \"NUMBER_OF_DESERTS\"\nFROM mondial_geo_desert mgd\nGROUP BY mgd.continent;"
        },
        {
            "question": "What are the neighboring seas of the Banda Sea?",
            "tables": [
                "mergeswith",
                "mergeswith"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MERGESWITH\" \n   (\t\"SEA1\" VARCHAR2(50 BYTE), \n\t\"SEA2\" VARCHAR2(50 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MERGESWITH\" \n   (\t\"SEA1\" VARCHAR2(50 BYTE), \n\t\"SEA2\" VARCHAR2(50 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MERGESWITH\" \n(\n  \"SEA1\" VARCHAR(50), \n  \"SEA2\" VARCHAR(50)\n);",
            "sql_coder": "\nSELECT \"SEA2\"\nFROM \"MONDIAL_GPT\".\"MERGESWITH\"\nWHERE \"SEA1\" ILIKE '%Banda%Sea%'",
            "sql_coder_oracle": "SELECT \"SEA2\"\nFROM \"MONDIAL_GPT\".\"MERGESWITH\"\nWHERE UPPER(\"SEA1\") LIKE UPPER('%Banda%Sea%')"
        },
        {
            "question": "List all the capitals of European countries.",
            "tables": [
                "mondial_country",
                "mondial_encompasses",
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR(20), \n\t\"AREA\" NUMERIC(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n  );",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.CAPITAL\nFROM MONDIAL_COUNTRY\nWHERE MONDIAL_COUNTRY.CONTINENT = 'Europe'\nORDER BY MONDIAL_COUNTRY.CAPITAL NULLS LAST;",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.CAPITAL\nFROM MONDIAL_COUNTRY\nWHERE MONDIAL_COUNTRY.CONTINENT = 'Europe'\nORDER BY CASE WHEN MONDIAL_COUNTRY.CAPITAL IS NULL THEN 1 ELSE 0 END, MONDIAL_COUNTRY.CAPITAL;"
        },
        {
            "question": "What percentage of people speak French in Andorra?",
            "tables": [
                "mondial_language",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"NAME\" VARCHAR(50), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_LANGUAGE.PERCENTAGE\nFROM MONDIAL_LANGUAGE\nWHERE MONDIAL_LANGUAGE.COUNTRY = 'AD'\n  AND MONDIAL_LANGUAGE.NAME = 'French'",
            "sql_coder_oracle": "SELECT MONDIAL_LANGUAGE.PERCENTAGE\nFROM MONDIAL_LANGUAGE\nWHERE MONDIAL_LANGUAGE.COUNTRY = 'AD'\n  AND MONDIAL_LANGUAGE.NAME = 'French'"
        },
        {
            "question": "Which rivers are longer than 1000 kilometers?",
            "tables": [
                "mondial_river"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"LAKE\" VARCHAR2(50 BYTE), \n\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"LENGTH\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"MOUNTAINS\" VARCHAR2(50 BYTE), \n\t\"SOURCEELEVATION\" NUMBER, \n\t\"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"ESTUARYELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"RIVER\" VARCHAR(50), \n\t\"LAKE\" VARCHAR(50), \n\t\"SEA\" VARCHAR(50), \n\t\"LENGTH\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\", \n\t\"MOUNTAINS\" VARCHAR(50), \n\t\"SOURCEELEVATION\" NUMERIC, \n\t\"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\", \n\t\"ESTUARYELEVATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT \"RIVER\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_RIVER\"\nWHERE \"LENGTH\" > '1000'",
            "sql_coder_oracle": "SELECT \"RIVER\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_RIVER\"\nWHERE \"LENGTH\" > 1000"
        },
        {
            "question": "Which country had the lowest population growth?",
            "tables": [
                "mondial_country",
                "mondial_population"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POPULATION\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION_GROWTH\" NUMBER, \n\t\"INFANT_MORTALITY\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (   \"NAME\" VARCHAR(50), \n       \"CODE\" VARCHAR(4), \n       \"CAPITAL\" VARCHAR(50), \n       \"PROVINCE\" VARCHAR(50), \n       \"AREA\" NUMERIC, \n       \"POPULATION\" NUMERIC, \n       \"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POPULATION\" \n   (   \"COUNTRY\" VARCHAR(4), \n       \"POPULATION_GROWTH\" NUMERIC, \n       \"INFANT_MORTALITY\" NUMERIC, \n       \"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.name\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_POPULATION ON MONDIAL_COUNTRY.code = MONDIAL_POPULATION.country\nORDER BY MONDIAL_POPULATION.population_growth ASC NULLS LAST\nLIMIT 1;",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.name\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_POPULATION ON MONDIAL_COUNTRY.code = MONDIAL_POPULATION.country\nORDER BY NVL(MONDIAL_POPULATION.population_growth, -9999999) ASC\nFETCH FIRST 1 ROWS ONLY;"
        },
        {
            "question": "List the name of capital cities for which we do not have data about the city in located",
            "tables": [
                "mondial_country",
                "mondial_located"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LOCATED\" \n   (\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"LAKE\" VARCHAR2(50 BYTE), \n\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000));\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LOCATED\" \n   (\t\"CITY\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"RIVER\" VARCHAR(50), \n\t\"LAKE\" VARCHAR(50), \n\t\"SEA\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000));",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.CAPITAL\nFROM MONDIAL_COUNTRY\nLEFT JOIN MONDIAL_LOCATED ON MONDIAL_COUNTRY.CAPITAL = MONDIAL_LOCATED.CITY\nWHERE MONDIAL_LOCATED.CITY IS NULL;",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.CAPITAL\nFROM MONDIAL_COUNTRY\nLEFT JOIN MONDIAL_LOCATED ON MONDIAL_COUNTRY.CAPITAL = MONDIAL_LOCATED.CITY\nWHERE MONDIAL_LOCATED.CITY IS NULL;"
        },
        {
            "question": "What is the capital of the provice Andalucía?",
            "tables": [
                "MONDIAL_PROVINCE"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"CAPPROV\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"POPULATION\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"CAPITAL\" VARCHAR(50), \n\t\"CAPPROV\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT CAPITAL\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE \"NAME\" ILIKE '%Andalucía%'",
            "sql_coder_oracle": "SELECT CAPITAL\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE UPPER(\"NAME\") LIKE UPPER('%Andalucía%')"
        },
        {
            "question": "What is the abbreviation for the organization whose name is \"General Confederation of Trade Unions\"?",
            "tables": [
                "mondial_organization"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ORGANIZATION\" \n   (\t\"ABBREVIATION\" VARCHAR2(12 BYTE), \n\t\"NAME\" VARCHAR2(100 BYTE), \n\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"ESTABLISHED\" DATE, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ORGANIZATION\" \n   (\t\"ABBREVIATION\" VARCHAR(12), \n\t\"NAME\" VARCHAR(100), \n\t\"CITY\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"ESTABLISHED\" DATE, \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT ABBREVIATION\nFROM MONDIAL_GPT.MONDIAL_ORGANIZATION\nWHERE \"NAME\" ILIKE '%General%Confederation%of%Trade%Unions%'",
            "sql_coder_oracle": "SELECT ABBREVIATION\nFROM MONDIAL_GPT.MONDIAL_ORGANIZATION\nWHERE UPPER(\"NAME\") LIKE UPPER('%General%Confederation%of%Trade%Unions%')"
        },
        {
            "question": "In which city is the organization with the abbreviation \"UPU\" ?",
            "tables": [
                "mondial_organization"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ORGANIZATION\" \n   (\t\"ABBREVIATION\" VARCHAR2(12 BYTE), \n\t\"NAME\" VARCHAR2(100 BYTE), \n\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"ESTABLISHED\" DATE, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ORGANIZATION\" \n(\n  \"ABBREVIATION\" VARCHAR(12), \n  \"NAME\" VARCHAR(100), \n  \"CITY\" VARCHAR(50), \n  \"COUNTRY\" VARCHAR(4), \n  \"PROVINCE\" VARCHAR(50), \n  \"ESTABLISHED\" DATE, \n  \"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT MONDIAL_ORGANIZATION.CITY\nFROM MONDIAL_ORGANIZATION\nWHERE MONDIAL_ORGANIZATION.ABBREVIATION = 'UPU'",
            "sql_coder_oracle": "SELECT MONDIAL_ORGANIZATION.CITY\nFROM MONDIAL_ORGANIZATION\nWHERE MONDIAL_ORGANIZATION.ABBREVIATION = 'UPU'"
        },
        {
            "question": "List the names of countries which are members of only one organization",
            "tables": [
                "mondial_country",
                "mondial_ismember",
                "mondial_ismember"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ISMEMBER\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"ORGANIZATION\" VARCHAR2(12 BYTE), \n\t\"TYPE\" VARCHAR2(60 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ISMEMBER\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"ORGANIZATION\" VARCHAR2(12 BYTE), \n\t\"TYPE\" VARCHAR2(60 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50),\n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ISMEMBER\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"ORGANIZATION\" VARCHAR(12), \n\t\"TYPE\" VARCHAR(60), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.name\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_ISMEMBER ON MONDIAL_COUNTRY.code = MONDIAL_ISMEMBER.country\nGROUP BY MONDIAL_COUNTRY.name\nHAVING COUNT(DISTINCT MONDIAL_ISMEMBER.organization) = 1;",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.name\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_ISMEMBER ON MONDIAL_COUNTRY.code = MONDIAL_ISMEMBER.country\nGROUP BY MONDIAL_COUNTRY.name\nHAVING COUNT(DISTINCT MONDIAL_ISMEMBER.organization) = 1;"
        },
        {
            "question": "List the name of countries which are not a member of NATO.",
            "tables": [
                "mondial_country",
                "mondial_ismember"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ISMEMBER\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"ORGANIZATION\" VARCHAR2(12 BYTE), \n\t\"TYPE\" VARCHAR2(60 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n(\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ISMEMBER\" \n(\n\t\"COUNTRY\" VARCHAR(4), \n\t\"ORGANIZATION\" VARCHAR(12), \n\t\"TYPE\" VARCHAR(60), \n\t\"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.name\nFROM MONDIAL_COUNTRY\nWHERE MONDIAL_COUNTRY.name NOT IN\n    (SELECT MONDIAL_ISMEMBER.COUNTRY\n     FROM MONDIAL_ISMEMBER\n     WHERE MONDIAL_ISMEMBER.ORGANIZATION = 'NATO');",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.name\nFROM MONDIAL_COUNTRY\nWHERE MONDIAL_COUNTRY.name NOT IN\n    (SELECT MONDIAL_ISMEMBER.COUNTRY\n     FROM MONDIAL_ISMEMBER\n     WHERE MONDIAL_ISMEMBER.ORGANIZATION = 'NATO');"
        },
        {
            "question": "List the name of countries which are a member of NATO.",
            "tables": [
                "mondial_country",
                "mondial_ismember"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ISMEMBER\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"ORGANIZATION\" VARCHAR2(12 BYTE), \n\t\"TYPE\" VARCHAR2(60 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ISMEMBER\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"ORGANIZATION\" VARCHAR(12), \n\t\"TYPE\" VARCHAR(60), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.name\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_ISMEMBER ON MONDIAL_COUNTRY.code = MONDIAL_ISMEMBER.country\nWHERE MONDIAL_ISMEMBER.organization = 'NATO'\nORDER BY MONDIAL_COUNTRY.name NULLS LAST;",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.name\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_ISMEMBER ON MONDIAL_COUNTRY.code = MONDIAL_ISMEMBER.country\nWHERE MONDIAL_ISMEMBER.organization = 'NATO'\nORDER BY CASE WHEN MONDIAL_COUNTRY.name IS NULL THEN 1 ELSE 0 END, MONDIAL_COUNTRY.name;"
        },
        {
            "question": "List the rivers with length less than 50",
            "tables": [
                "mondial_river"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"LAKE\" VARCHAR2(50 BYTE), \n\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"LENGTH\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"MOUNTAINS\" VARCHAR2(50 BYTE), \n\t\"SOURCEELEVATION\" NUMBER, \n\t\"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"ESTUARYELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"RIVER\" VARCHAR(50), \n\t\"LAKE\" VARCHAR(50), \n\t\"SEA\" VARCHAR(50), \n\t\"LENGTH\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"MOUNTAINS\" VARCHAR(50), \n\t\"SOURCEELEVATION\" NUMERIC, \n\t\"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"ESTUARYELEVATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_RIVER\"\nWHERE \"LENGTH\" < '50'",
            "sql_coder_oracle": "SELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_RIVER\"\nWHERE \"LENGTH\" < 50"
        },
        {
            "question": "What are the area, elevation and type of lakes in country Italy?",
            "tables": [
                "MONDIAL_GEO_LAKE"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_LAKE\" \n   (\t\"LAKE\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_LAKE\" \n   (\t\"LAKE\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT \"LAKE\",\n       \"COUNTRY\",\n       \"PROVINCE\",\n       \"META_REPCOL\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_GEO_LAKE\"\nWHERE \"COUNTRY\" ILIKE '%Italy%'",
            "sql_coder_oracle": "SELECT \"LAKE\",\n       \"COUNTRY\",\n       \"PROVINCE\",\n       \"META_REPCOL\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_GEO_LAKE\"\nWHERE UPPER(\"COUNTRY\") LIKE '%ITALY%'"
        },
        {
            "question": "List the names of capital cities which are the base for organizations in alphabetical order",
            "tables": [
                "mondial_country",
                "mondial_organization"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ORGANIZATION\" \n   (\t\"ABBREVIATION\" VARCHAR2(12 BYTE), \n\t\"NAME\" VARCHAR2(100 BYTE), \n\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"ESTABLISHED\" DATE, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ORGANIZATION\" \n   (\t\"ABBREVIATION\" VARCHAR(12), \n\t\"NAME\" VARCHAR(100), \n\t\"CITY\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"ESTABLISHED\" DATE, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.CAPITAL\nFROM MONDIAL_COUNTRY\nWHERE MONDIAL_COUNTRY.COUNTRY = 'THA'\nORDER BY MONDIAL_COUNTRY.CAPITAL ASC;",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.CAPITAL\nFROM MONDIAL_COUNTRY\nWHERE MONDIAL_COUNTRY.COUNTRY = 'THA'\nORDER BY MONDIAL_COUNTRY.CAPITAL ASC;"
        },
        {
            "question": "List the name of organizations that do not have countries with an area smaller than 4000 and of the member type",
            "tables": [
                "mondial_organization",
                "mondial_ismember",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ORGANIZATION\" \n   (\t\"ABBREVIATION\" VARCHAR2(12 BYTE), \n\t\"NAME\" VARCHAR2(100 BYTE), \n\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"ESTABLISHED\" DATE, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ISMEMBER\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"ORGANIZATION\" VARCHAR2(12 BYTE), \n\t\"TYPE\" VARCHAR2(60 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"mondial_gpt\".\"mondial_organization\" \n   (\t\"abbreviation\" varchar(12), \n\t\"name\" varchar(100), \n\t\"city\" varchar(50), \n\t\"country\" varchar(4), \n\t\"province\" varchar(50), \n\t\"established\" date, \n\t\"meta_repcol\" varchar(4000)\n   );\n\nCREATE TABLE \"mondial_gpt\".\"mondial_ismember\" \n   (\t\"country\" varchar(4), \n\t\"organization\" varchar(12), \n\t\"type\" varchar(60), \n\t\"meta_repcol\" varchar(4000)\n   );\n\nCREATE TABLE \"mondial_gpt\".\"mondial_country\" \n   (\t\"name\" varchar(50), \n\t\"code\" varchar(4), \n\t\"capital\" varchar(50), \n\t\"province\" varchar(50), \n\t\"area\" numeric, \n\t\"population\" numeric, \n\t\"meta_repcol\" varchar(4000)\n   );",
            "sql_coder": "\nSELECT \"mondial_gpt\".\"mondial_organization\".\"name\"\nFROM \"mondial_gpt\".\"mondial_organization\"\nJOIN \"mondial_gpt\".\"mondial_ismember\" ON \"mondial_gpt\".\"mondial_organization\".\"name\" = \"mondial_gpt\".\"mondial_ismember\".\"organization\"\nJOIN \"mondial_gpt\".\"mondial_country\" ON \"mondial_gpt\".\"mondial_ismember\".\"country\" = \"mondial_gpt\".\"mondial_country\".\"code\"\nWHERE \"mondial_gpt\".\"mondial_country\".\"area\" < '4000'\n  AND \"mondial_gpt\".\"mondial_ismember\".\"type\" ILIKE '%member%'\nORDER BY \"mondial_gpt\".\"mondial_organization\".\"name\" NULLS LAST;",
            "sql_coder_oracle": "SELECT \"mondial_gpt\".\"mondial_organization\".\"name\"\nFROM \"mondial_gpt\".\"mondial_organization\"\nJOIN \"mondial_gpt\".\"mondial_ismember\" ON \"mondial_gpt\".\"mondial_organization\".\"name\" = \"mondial_gpt\".\"mondial_ismember\".\"organization\"\nJOIN \"mondial_gpt\".\"mondial_country\" ON \"mondial_gpt\".\"mondial_ismember\".\"country\" = \"mondial_gpt\".\"mondial_country\".\"code\"\nWHERE \"mondial_gpt\".\"mondial_country\".\"area\" < 4000\n  AND UPPER(\"mondial_gpt\".\"mondial_ismember\".\"type\") LIKE UPPER('%member%')\nORDER BY \"mondial_gpt\".\"mondial_organization\".\"name\" NULLS LAST;"
        },
        {
            "question": "List the name of organizations that do not have countries with  an area greater than 10000 and population smaller than 3000 and of the member type",
            "tables": [
                "mondial_organization",
                "mondial_ismember",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ORGANIZATION\" \n   (\t\"ABBREVIATION\" VARCHAR2(12 BYTE), \n\t\"NAME\" VARCHAR2(100 BYTE), \n\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"ESTABLISHED\" DATE, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ISMEMBER\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"ORGANIZATION\" VARCHAR2(12 BYTE), \n\t\"TYPE\" VARCHAR2(60 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ORGANIZATION\" \n   (\n    \"ABBREVIATION\" VARCHAR(12), \n\t\"NAME\" VARCHAR(100), \n\t\"CITY\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"ESTABLISHED\" DATE, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ISMEMBER\" \n   (\n    \"COUNTRY\" VARCHAR(4), \n\t\"ORGANIZATION\" VARCHAR(12), \n\t\"TYPE\" VARCHAR(60), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_ORGANIZATION.NAME\nFROM MONDIAL_ORGANIZATION\nJOIN MONDIAL_ISMEMBER ON MONDIAL_ORGANIZATION.ORGANIZATION = MONDIAL_ISMEMBER.ORGANIZATION\nJOIN MONDIAL_COUNTRY ON MONDIAL_ISMEMBER.COUNTRY = MONDIAL_COUNTRY.CODE\nWHERE MONDIAL_COUNTRY.AREA > 10000\n  AND MONDIAL_COUNTRY.POPULATION < 3000\n  AND MONDIAL_ISMEMBER.TYPE ='member'\nORDER BY MONDIAL_ORGANIZATION.NAME NULLS LAST;",
            "sql_coder_oracle": "SELECT MONDIAL_ORGANIZATION.NAME\nFROM MONDIAL_ORGANIZATION\nJOIN MONDIAL_ISMEMBER ON MONDIAL_ORGANIZATION.ORGANIZATION = MONDIAL_ISMEMBER.ORGANIZATION\nJOIN MONDIAL_COUNTRY ON MONDIAL_ISMEMBER.COUNTRY = MONDIAL_COUNTRY.CODE\nWHERE MONDIAL_COUNTRY.AREA > 10000\n  AND MONDIAL_COUNTRY.POPULATION < 3000\n  AND MONDIAL_ISMEMBER.TYPE ='member'\nORDER BY NULLIF(MONDIAL_ORGANIZATION.NAME, MONDIAL_ORGANIZATION.NAME) DESC, MONDIAL_ORGANIZATION.NAME;"
        },
        {
            "question": "Show the inflation rate sorted of countries that are washed by the Arabian Sea",
            "tables": [
                "mondial_economy",
                "mondial_country",
                "mondial_geo_sea",
                "mondial_sea"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ECONOMY\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"GDP\" NUMBER, \n\t\"AGRICULTURE\" NUMBER, \n\t\"SERVICE\" NUMBER, \n\t\"INDUSTRY\" NUMBER, \n\t\"INFLATION\" NUMBER, \n\t\"UNEMPLOYMENT\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n   (\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"DEPTH\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ECONOMY\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"GDP\" NUMERIC, \n\t\"AGRICULTURE\" NUMERIC, \n\t\"SERVICE\" NUMERIC, \n\t\"INDUSTRY\" NUMERIC, \n\t\"INFLATION\" NUMERIC, \n\t\"UNEMPLOYMENT\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n   (\t\"SEA\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"DEPTH\" NUMERIC,\n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_ECONOMY.COUNTRY,\n       MONDIAL_ECONOMY.INFLATION\nFROM MONDIAL_ECONOMY\nJOIN MONDIAL_GEO_SEA ON MONDIAL_ECONOMY.COUNTRY = MONDIAL_GEO_SEA.COUNTRY\nWHERE MONDIAL_GEO_SEA.SEA = 'Arabian Sea'\nORDER BY MONDIAL_ECONOMY.INFLATION DESC NULLS LAST;",
            "sql_coder_oracle": "SELECT MONDIAL_ECONOMY.COUNTRY,\n       MONDIAL_ECONOMY.INFLATION\nFROM MONDIAL_ECONOMY\nJOIN MONDIAL_GEO_SEA ON MONDIAL_ECONOMY.COUNTRY = MONDIAL_GEO_SEA.COUNTRY\nWHERE MONDIAL_GEO_SEA.SEA = 'Arabian Sea'\nORDER BY CASE WHEN MONDIAL_ECONOMY.INFLATION IS NULL THEN 1 ELSE 0 END, MONDIAL_ECONOMY.INFLATION DESC;"
        },
        {
            "question": "List all the capitals of the countries that belong to the continent Africa?",
            "tables": [
                "mondial_country",
                "mondial_encompasses",
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n\t);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n\t);\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR(20), \n\t\"AREA\" NUMERIC(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n\t);",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.CAPITAL\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_ENCOMPASSES ON MONDIAL_COUNTRY.CODE = MONDIAL_ENCOMPASSES.COUNTRY\nWHERE MONDIAL_ENCOMPASSES.CONTINENT = 'Africa'",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.CAPITAL\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_ENCOMPASSES ON MONDIAL_COUNTRY.CODE = MONDIAL_ENCOMPASSES.COUNTRY\nWHERE MONDIAL_ENCOMPASSES.CONTINENT = 'Africa'"
        },
        {
            "question": "Show the inflation rate of the countries bathed by the Arabian Sea and there is no inflation with null value",
            "tables": [
                "mondial_economy",
                "mondial_country",
                "mondial_geo_sea",
                "mondial_sea"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ECONOMY\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"GDP\" NUMBER, \n\t\"AGRICULTURE\" NUMBER, \n\t\"SERVICE\" NUMBER, \n\t\"INDUSTRY\" NUMBER, \n\t\"INFLATION\" NUMBER, \n\t\"UNEMPLOYMENT\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n   (\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"DEPTH\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ECONOMY\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"GDP\" NUMERIC, \n\t\"AGRICULTURE\" NUMERIC, \n\t\"SERVICE\" NUMERIC, \n\t\"INDUSTRY\" NUMERIC, \n\t\"INFLATION\" NUMERIC, \n\t\"UNEMPLOYMENT\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_SEA\" \n   (\t\"SEA\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"DEPTH\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_ECONOMY.INFLATION\nFROM MONDIAL_ECONOMY\nJOIN MONDIAL_GEO_SEA ON MONDIAL_ECONOMY.COUNTRY = MONDIAL_GEO_SEA.COUNTRY\nWHERE MONDIAL_GEO_SEA.SEA = 'Arabian Sea'\n  AND MONDIAL_ECONOMY.INFLATION IS NOT NULL;",
            "sql_coder_oracle": "SELECT MONDIAL_ECONOMY.INFLATION\nFROM MONDIAL_ECONOMY\nJOIN MONDIAL_GEO_SEA ON MONDIAL_ECONOMY.COUNTRY = MONDIAL_GEO_SEA.COUNTRY\nWHERE MONDIAL_GEO_SEA.SEA = 'Arabian Sea'\n  AND MONDIAL_ECONOMY.INFLATION IS NOT NULL;"
        },
        {
            "question": "How many countries are in Africa?",
            "tables": [
                "mondial_country",
                "mondial_encompasses",
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" DECIMAL, \n\t\"POPULATION\" DECIMAL, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" DECIMAL, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR(20), \n\t\"AREA\" DECIMAL(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT COUNT(DISTINCT MONDIAL_COUNTRY.CONTINENT) AS number_of_continents\nFROM MONDIAL_COUNTRY\nWHERE MONDIAL_COUNTRY.CONTINENT = 'Africa';",
            "sql_coder_oracle": "SELECT COUNT(DISTINCT MONDIAL_COUNTRY.CONTINENT) AS number_of_continents\nFROM MONDIAL_COUNTRY\nWHERE MONDIAL_COUNTRY.CONTINENT = 'Africa';"
        },
        {
            "question": "List the name of countries that are not members of NATO and UNESCO",
            "tables": [
                "country",
                "ismember",
                "country",
                "ismember"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"ISMEMBER\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"ORGANIZATION\" VARCHAR2(12 BYTE), \n\t\"TYPE\" VARCHAR2(60 BYTE) DEFAULT 'member'\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"ISMEMBER\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"ORGANIZATION\" VARCHAR2(12 BYTE), \n\t\"TYPE\" VARCHAR2(60 BYTE) DEFAULT 'member'\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"COUNTRY\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"ISMEMBER\" \n   (\n\t\"COUNTRY\" VARCHAR(4), \n\t\"ORGANIZATION\" VARCHAR(12), \n\t\"TYPE\" VARCHAR(60) DEFAULT 'member'\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"COUNTRY\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"ISMEMBER\" \n   (\n\t\"COUNTRY\" VARCHAR(4), \n\t\"ORGANIZATION\" VARCHAR(12), \n\t\"TYPE\" VARCHAR(60) DEFAULT 'member'\n   );",
            "sql_coder": "\nSELECT country.name\nFROM country\nWHERE country.code NOT IN\n    (SELECT ismember.country\n     FROM ismember\n     WHERE ismember.organization IN ('NATO',\n                                     'UNESCO'));",
            "sql_coder_oracle": "SELECT country.name\nFROM country\nWHERE country.code NOT IN\n    (SELECT ismember.country\n     FROM ismember\n     WHERE ismember.organization IN ('NATO',\n                                     'UNESCO'));"
        },
        {
            "question": "What is the area of the continent Europe?",
            "tables": [
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\n    \"NAME\" VARCHAR(20), \n    \"AREA\" NUMERIC(10,0), \n    \"META_REPCOL\" VARCHAR(4000)\n   )\n   TABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT MONDIAL_CONTINENT.AREA\nFROM MONDIAL_CONTINENT\nWHERE MONDIAL_CONTINENT.NAME = 'Europe'",
            "sql_coder_oracle": "SELECT MONDIAL_CONTINENT.AREA\nFROM MONDIAL_CONTINENT\nWHERE MONDIAL_CONTINENT.NAME = 'Europe'"
        },
        {
            "question": "What is the area of continent America?",
            "tables": [
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\"\n(\n    \"NAME\" VARCHAR(20),\n    \"AREA\" NUMERIC(10,0),\n    \"META_REPCOL\" TEXT\n)\nTABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT MONDIAL_CONTINENT.AREA\nFROM MONDIAL_CONTINENT\nWHERE MONDIAL_CONTINENT.NAME = 'America';",
            "sql_coder_oracle": "SELECT MONDIAL_CONTINENT.AREA\nFROM MONDIAL_CONTINENT\nWHERE MONDIAL_CONTINENT.NAME = 'America';"
        },
        {
            "question": "What is the area of continent Asia?",
            "tables": [
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\n     \"NAME\" VARCHAR(20), \n     \"AREA\" NUMERIC(10,0), \n     \"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_GPT.MONDIAL_CONTINENT.AREA\nFROM MONDIAL_GPT.MONDIAL_CONTINENT\nWHERE MONDIAL_GPT.MONDIAL_CONTINENT.NAME = 'Asia'",
            "sql_coder_oracle": "SELECT MONDIAL_GPT.MONDIAL_CONTINENT.AREA\nFROM MONDIAL_GPT.MONDIAL_CONTINENT\nWHERE MONDIAL_GPT.MONDIAL_CONTINENT.NAME = 'Asia'"
        },
        {
            "question": "What is the area of Africa?",
            "tables": [
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR(20), \n\t\"AREA\" NUMERIC(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT MONDIAL_CONTINENT.AREA\nFROM MONDIAL_CONTINENT\nWHERE MONDIAL_CONTINENT.NAME = 'Africa';",
            "sql_coder_oracle": "SELECT MONDIAL_CONTINENT.AREA\nFROM MONDIAL_CONTINENT\nWHERE MONDIAL_CONTINENT.NAME = 'Africa';"
        },
        {
            "question": "How many countries are in America?",
            "tables": [
                "mondial_country",
                "mondial_encompasses",
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR(20), \n\t\"AREA\" NUMERIC(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT COUNT(*)\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nWHERE \"CONTINENT\" ILIKE '%America%'",
            "sql_coder_oracle": "SELECT COUNT(*)\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nWHERE UPPER(\"CONTINENT\") LIKE '%AMERICA%'"
        },
        {
            "question": "What area is the largest continent?",
            "tables": [
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n(\n  \"NAME\" VARCHAR(20), \n  \"AREA\" NUMERIC(10,0), \n  \"META_REPCOL\" VARCHAR(4000)\n)\nTABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT MAX(AREA)\nFROM MONDIAL_GPT.MONDIAL_CONTINENT\nWHERE \"NAME\" ILIKE '%Thailand%'",
            "sql_coder_oracle": "SELECT MAX(AREA)\nFROM MONDIAL_GPT.MONDIAL_CONTINENT\nWHERE UPPER(\"NAME\") LIKE UPPER('%Thailand%')"
        },
        {
            "question": "List the countries that belong to the continent with the largest area",
            "tables": [
                "mondial_country",
                "mondial_continent",
                "mondial_encompasses",
                "mondial_continent"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\n\t\"NAME\" VARCHAR(20), \n\t\"AREA\" NUMERIC(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\n\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\n\t\"NAME\" VARCHAR(20), \n\t\"AREA\" NUMERIC(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_GPT.MONDIAL_CONTINENT.NAME\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nJOIN MONDIAL_GPT.MONDIAL_ENCOMPASSES ON MONDIAL_GPT.MONDIAL_COUNTRY.CODE = MONDIAL_GPT.MONDIAL_ENCOMPASSES.COUNTRY\nWHERE MONDIAL_GPT.MONDIAL_COUNTRY.NAME = 'Thailand'\nGROUP BY MONDIAL_GPT.MONDIAL_CONTINENT.NAME\nORDER BY MONDIAL_GPT.MONDIAL_CONTINENT.AREA DESC NULLS LAST\nLIMIT 1;",
            "sql_coder_oracle": "SELECT MONDIAL_GPT.MONDIAL_CONTINENT.NAME\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nJOIN MONDIAL_GPT.MONDIAL_ENCOMPASSES ON MONDIAL_GPT.MONDIAL_COUNTRY.CODE = MONDIAL_GPT.MONDIAL_ENCOMPASSES.COUNTRY\nWHERE MONDIAL_GPT.MONDIAL_COUNTRY.NAME = 'Thailand'\nGROUP BY MONDIAL_GPT.MONDIAL_CONTINENT.NAME\nORDER BY MONDIAL_GPT.MONDIAL_CONTINENT.AREA DESC NULLS LAST\nFETCH FIRST 1 ROWS ONLY;"
        },
        {
            "question": "List the countries that belong to the continent with the largest area and whose language is English",
            "tables": [
                "mondial_country",
                "mondial_continent",
                "mondial_encompasses",
                "mondial_continent",
                "mondial_language"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CONTINENT\" VARCHAR2(20 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR2(20 BYTE), \n\t\"AREA\" NUMBER(10,0), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CONTINENT\" \n   (\t\"NAME\" VARCHAR(20), \n\t\"AREA\" NUMERIC(10,0), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ENCOMPASSES\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"CONTINENT\" VARCHAR(20), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"NAME\" VARCHAR(50), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000) \n   );",
            "sql_coder": "\nSELECT MONDIAL_GPT.MONDIAL_CONTINENT.NAME\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nJOIN MONDIAL_GPT.MONDIAL_ENCOMPASSES ON MONDIAL_GPT.MONDIAL_COUNTRY.CODE = MONDIAL_GPT.MONDIAL_ENCOMPASSES.COUNTRY\nJOIN MONDIAL_GPT.MONDIAL_LANGUAGE ON MONDIAL_GPT.MONDIAL_COUNTRY.CODE = MONDIAL_GPT.MONDIAL_LANGUAGE.COUNTRY\nWHERE MONDIAL_GPT.MONDIAL_LANGUAGE.NAME = 'English'\nGROUP BY MONDIAL_GPT.MONDIAL_CONTINENT.NAME\nORDER BY MONDIAL_GPT.MONDIAL_CONTINENT.AREA DESC NULLS LAST\nLIMIT 1;",
            "sql_coder_oracle": "SELECT MONDIAL_GPT.MONDIAL_CONTINENT.NAME\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nJOIN MONDIAL_GPT.MONDIAL_ENCOMPASSES ON MONDIAL_GPT.MONDIAL_COUNTRY.CODE = MONDIAL_GPT.MONDIAL_ENCOMPASSES.COUNTRY\nJOIN MONDIAL_GPT.MONDIAL_LANGUAGE ON MONDIAL_GPT.MONDIAL_COUNTRY.CODE = MONDIAL_GPT.MONDIAL_LANGUAGE.COUNTRY\nWHERE MONDIAL_GPT.MONDIAL_LANGUAGE.NAME = 'English'\nGROUP BY MONDIAL_GPT.MONDIAL_CONTINENT.NAME\nORDER BY MONDIAL_GPT.MONDIAL_CONTINENT.AREA DESC NULLS LAST\nFETCH FIRST 1 ROWS ONLY;"
        },
        {
            "question": "List the names of cities, along with the name of their country for cities with a population greater than 5 million.  Display the results in descending order by population.",
            "tables": [
                "mondial_city",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" CHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"POPULATION\" NUMERIC, \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\";\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" CHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT MONDIAL_CITY.NAME,\n       MONDIAL_CITY.COUNTRY,\n       MONDIAL_CITY.POPULATION\nFROM MONDIAL_CITY\nWHERE MONDIAL_CITY.POPULATION > 5000000\nORDER BY MONDIAL_CITY.POPULATION DESC;",
            "sql_coder_oracle": "SELECT MONDIAL_CITY.NAME,\n       MONDIAL_CITY.COUNTRY,\n       MONDIAL_CITY.POPULATION\nFROM MONDIAL_CITY\nWHERE MONDIAL_CITY.POPULATION > 5000000\nORDER BY MONDIAL_CITY.POPULATION DESC;"
        },
        {
            "question": "Show the name of the deserts in the province of Algeria",
            "tables": [
                "mondial_desert",
                "mondial_geo_desert"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_DESERT\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_DESERT\" \n   (\t\"DESERT\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"mondial_gpt_desert\" \n   (\"name\" VARCHAR(50),\n    \"area\" NUMERIC,\n    \"coordinates\" point,\n    \"meta_repcol\" VARCHAR(4000));\n\nCREATE TABLE \"mondial_geo_desert\"\n    (\"desert\" VARCHAR(50),\n    \"country\" VARCHAR(4),\n    \"province\" VARCHAR(50),\n    \"meta_repcol\" VARCHAR(4000));",
            "sql_coder": "\nSELECT \"name\"\nFROM \"mondial_gpt_desert\"\nWHERE \"province\" ILIKE '%Algeria%'",
            "sql_coder_oracle": "SELECT \"name\"\nFROM \"mondial_gpt_desert\"\nWHERE UPPER(\"province\") LIKE '%ALGERIA%'"
        },
        {
            "question": "Show the name and area of the deserts in the province of California",
            "tables": [
                "mondial_desert",
                "mondial_geo_desert"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_DESERT\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_DESERT\" \n   (\t\"DESERT\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_DESERT\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR(4000) \n) TABLESPACE \"MONDIAL_GPT\";\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_GEO_DESERT\" \n   (\t\"DESERT\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n) TABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT MONDIAL_GPT.MONDIAL_DESERT.name,\n       MONDIAL_GPT.MONDIAL_DESERT.area\nFROM MONDIAL_GPT.MONDIAL_GEO_DESERT\nWHERE MONDIAL_GPT.MONDIAL_GEO_DESERT.province = 'California'\nORDER BY MONDIAL_GPT.MONDIAL_DESERT.area DESC NULLS LAST;",
            "sql_coder_oracle": "SELECT MONDIAL_GPT.MONDIAL_DESERT.name,\n   MONDIAL_GPT.MONDIAL_DESERT.area\nFROM MONDIAL_GPT.MONDIAL_GEO_DESERT\nWHERE MONDIAL_GPT.MONDIAL_GEO_DESERT.province = 'California'\nORDER BY NVL(MONDIAL_GPT.MONDIAL_DESERT.area, 0) DESC;"
        },
        {
            "question": "List the country names and percentage of use of language where  French are used as languages.",
            "tables": [
                "mondial_language",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\" \n   (\t\"COUNTRY\" VARCHAR(4), \n\t\"NAME\" VARCHAR(50), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\";\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.NAME,\n       SUM(MONDIAL_LANGUAGE.PERCENTAGE) AS total_percentage\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_LANGUAGE ON MONDIAL_COUNTRY.CODE = MONDIAL_LANGUAGE.COUNTRY\nWHERE MONDIAL_LANGUAGE.NAME = 'French'\nGROUP BY MONDIAL_COUNTRY.NAME;",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.NAME,\n       SUM(MONDIAL_LANGUAGE.PERCENTAGE) AS total_percentage\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_LANGUAGE ON MONDIAL_COUNTRY.CODE = MONDIAL_LANGUAGE.COUNTRY\nWHERE MONDIAL_LANGUAGE.NAME = 'French'\nGROUP BY MONDIAL_COUNTRY.NAME;"
        },
        {
            "question": "What are the cities where �Portuguese� is spoken?",
            "tables": [
                "mondial_city",
                "mondial_country",
                "mondial_language"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"PERCENTAGE\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"POPULATION\" NUMERIC, \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\" \n   (\n\t\"COUNTRY\" VARCHAR(4), \n\t\"NAME\" VARCHAR(50), \n\t\"PERCENTAGE\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\".\"AREA\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\"\nWHERE \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\".\"NAME\" ILIKE '%Portuguese%'",
            "sql_coder_oracle": "SELECT \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\".\"AREA\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\"\nWHERE UPPER(\"MONDIAL_GPT\".\"MONDIAL_LANGUAGE\".\"NAME\") LIKE UPPER('%Portuguese%')"
        },
        {
            "question": "What is the total area of the provinces in Canada?",
            "tables": [
                "mondial_province",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"CAPPROV\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"POPULATION\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"CAPITAL\" VARCHAR(50), \n\t\"CAPPROV\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT SUM(AREA) AS total_area\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE \"COUNTRY\" ILIKE '%Canada%';",
            "sql_coder_oracle": "SELECT SUM(AREA) AS total_area\nFROM MONDIAL_GPT.MONDIAL_PROVINCE\nWHERE UPPER(\"COUNTRY\") LIKE '%CANADA%';"
        },
        {
            "question": "What is the length of the Tigres River?",
            "tables": [
                "mondial_river"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"LAKE\" VARCHAR2(50 BYTE), \n\t\"SEA\" VARCHAR2(50 BYTE), \n\t\"LENGTH\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"MOUNTAINS\" VARCHAR2(50 BYTE), \n\t\"SOURCEELEVATION\" NUMBER, \n\t\"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"ESTUARYELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_RIVER\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"RIVER\" VARCHAR(50), \n\t\"LAKE\" VARCHAR(50), \n\t\"SEA\" VARCHAR(50), \n\t\"LENGTH\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"SOURCE\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"MOUNTAINS\" VARCHAR(50), \n\t\"SOURCEELEVATION\" NUMERIC, \n\t\"ESTUARY\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"ESTUARYELEVATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\";\n",
            "sql_coder": "\nSELECT \"LENGTH\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_RIVER\"\nWHERE \"RIVER\" ILIKE '%Tigres%River%'",
            "sql_coder_oracle": "SELECT \"LENGTH\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_RIVER\"\nWHERE UPPER(\"RIVER\") LIKE '%TIGRES%RIVER%'"
        },
        {
            "question": "List the Airports with elevation more than 1000",
            "tables": [
                "mondial_airport"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\" \n   (\t\"NAME\" VARCHAR2(100 BYTE), \n\t\"IATACODE\" VARCHAR2(3 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"ISLAND\" VARCHAR2(50 BYTE), \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"GMTOFFSET\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\" \n   (\n\t\"NAME\" VARCHAR(100), \n\t\"IATACODE\" VARCHAR(3), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"CITY\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"ISLAND\" VARCHAR(50), \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"GMTOFFSET\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT \"NAME\",\n       \"IATACODE\",\n       \"COUNTRY\",\n       \"CITY\",\n       \"PROVINCE\",\n       \"ISLAND\",\n       \"LATITUDE\",\n       \"LONGITUDE\",\n       \"ELEVATION\",\n       \"GMTOFFSET\",\n       \"META_REPCOL\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\"\nWHERE \"ELEVATION\" > '1000'\nORDER BY \"ELEVATION\" DESC NULLS LAST;",
            "sql_coder_oracle": "SELECT \"NAME\",\n       \"IATACODE\",\n       \"COUNTRY\",\n       \"CITY\",\n       \"PROVINCE\",\n       \"ISLAND\",\n       \"LATITUDE\",\n       \"LONGITUDE\",\n       \"ELEVATION\",\n       \"GMTOFFSET\",\n       \"META_REPCOL\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\"\nWHERE \"ELEVATION\" > '1000'\nORDER BY DECODE(\"ELEVATION\", NULL, 1, 0), \"ELEVATION\" DESC;"
        },
        {
            "question": "List airports in the United States with an elevation below 200 feet",
            "tables": [
                "mondial_airport",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\" \n   (\t\"NAME\" VARCHAR2(100 BYTE), \n\t\"IATACODE\" VARCHAR2(3 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"ISLAND\" VARCHAR2(50 BYTE), \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"GMTOFFSET\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\" \n   (\t\"NAME\" VARCHAR(100), \n\t\"IATACODE\" VARCHAR(3), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"CITY\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"ISLAND\" VARCHAR(50), \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"GMTOFFSET\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\"\nWHERE \"COUNTRY\" ILIKE '%united%states%'\n  AND \"ELEVATION\" < '200'\nORDER BY \"ELEVATION\" NULLS LAST;",
            "sql_coder_oracle": "SELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\"\nWHERE UPPER(\"COUNTRY\") LIKE '%UNITED%STATES%'\n  AND \"ELEVATION\" < 200\nORDER BY \"ELEVATION\" NULLS LAST;"
        },
        {
            "question": "What are the mountains with altitudes above 8000 meters?",
            "tables": [
                "mondial_mountain"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_MOUNTAIN\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"MOUNTAINS\" VARCHAR2(50 BYTE), \n\t\"ELEVATION\" NUMBER, \n\t\"TYPE\" VARCHAR2(10 BYTE), \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_MOUNTAIN\" \n(\n  \"NAME\" VARCHAR(50), \n  \"MOUNTAINS\" VARCHAR(50), \n  \"ELEVATION\" NUMERIC, \n  \"TYPE\" VARCHAR(10), \n  \"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n  \"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT \"MOUNTAINS\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_MOUNTAIN\"\nWHERE \"ELEVATION\" > '8000'",
            "sql_coder_oracle": "SELECT \"MOUNTAINS\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_MOUNTAIN\"\nWHERE \"ELEVATION\" > 8000"
        },
        {
            "question": "What are the 3 airports with the largest name?",
            "tables": [
                "mondial_airport"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\" \n   (\t\"NAME\" VARCHAR2(100 BYTE), \n\t\"IATACODE\" VARCHAR2(3 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"ISLAND\" VARCHAR2(50 BYTE), \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"GMTOFFSET\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\" \n   (\n\t\"NAME\" VARCHAR(100), \n\t\"IATACODE\" VARCHAR(3), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"CITY\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"ISLAND\" VARCHAR(50), \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"GMTOFFSET\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\"\nORDER BY \"NAME\" DESC NULLS LAST\nLIMIT 3;",
            "sql_coder_oracle": "SELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_AIRPORT\"\nORDER BY \"NAME\" DESC NULLS LAST\nFETCH FIRST 3 ROWS ONLY;"
        },
        {
            "question": "List lakes with an area of less than 5000 square kilometers.",
            "tables": [
                "mondial_lake"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LAKE\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"DEPTH\" NUMBER, \n\t\"HEIGHT\" NUMBER, \n\t\"TYPE\" VARCHAR2(12 BYTE), \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_LAKE\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"RIVER\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"DEPTH\" NUMERIC, \n\t\"HEIGHT\" NUMERIC, \n\t\"TYPE\" VARCHAR(12), \n\t\"COORDINATES\" geometry , \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\";",
            "sql_coder": "\nSELECT \"NAME\",\n       \"AREA\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_LAKE\"\nWHERE \"AREA\" < '5000'\nORDER BY \"AREA\" NULLS LAST;",
            "sql_coder_oracle": "SELECT \"NAME\",\n       \"AREA\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_LAKE\"\nWHERE \"AREA\" < '5000'\nORDER BY NULLS LAST \"AREA\";"
        },
        {
            "question": "What is the total area of the seas with a depth greater than 1000 meters?",
            "tables": [
                "mondial_sea"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"DEPTH\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_SEA\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"DEPTH\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) TABLESPACE \"MONDIAL_GPT\" ;",
            "sql_coder": "\nSELECT SUM(AREA) AS total_area\nFROM MONDIAL_GPT.MONDIAL_SEA\nWHERE DEPTH > 1000;",
            "sql_coder_oracle": "SELECT SUM(AREA) AS total_area\nFROM MONDIAL_GPT.MONDIAL_SEA\nWHERE DEPTH > 1000;"
        },
        {
            "question": "Find the countries whose name starts with the letter \"B\" and have a population greater than 10 million",
            "tables": [
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n(\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n) TABLESPACE \"MONDIAL_GPT\";\n",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.name\nFROM MONDIAL_COUNTRY\nWHERE MONDIAL_COUNTRY.name ilike 'B%'\n  AND MONDIAL_COUNTRY.population > 1000000;",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.name\nFROM MONDIAL_COUNTRY\nWHERE UPPER(MONDIAL_COUNTRY.name) LIKE 'B%'\n  AND MONDIAL_COUNTRY.population > 1000000;"
        },
        {
            "question": "List cities with another name in Brazil",
            "tables": [
                "mondial_cityothername",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITYOTHERNAME\" \n   (\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"OTHERNAME\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITYOTHERNAME\" \n   (\t\"CITY\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"OTHERNAME\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_CITYOTHERNAME.OTHERNAME\nFROM MONDIAL_CITYOTHERNAME\nWHERE MONDIAL_CITYOTHERNAME.COUNTRY = 'BR';",
            "sql_coder_oracle": "SELECT MONDIAL_CITYOTHERNAME.OTHERNAME\nFROM MONDIAL_CITYOTHERNAME\nWHERE MONDIAL_CITYOTHERNAME.COUNTRY = 'BR';"
        },
        {
            "question": "List all cities that are at a latitude greater than 45 degrees.",
            "tables": [
                "mondial_city"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n(\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"POPULATION\" NUMERIC, \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_CITY\"\nWHERE \"LATITUDE\" > '45'",
            "sql_coder_oracle": "SELECT \"NAME\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_CITY\"\nWHERE \"LATITUDE\" > 45"
        },
        {
            "question": "Show the number of cities with another name in countries with an area greater than 30000",
            "tables": [
                "mondial_cityothername",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITYOTHERNAME\" \n   (\t\"CITY\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"OTHERNAME\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITYOTHERNAME\" \n   (\t\"CITY\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"OTHERNAME\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT COUNT(DISTINCT MONDIAL_CITYOTHERNAME.CITY) AS number_of_cities\nFROM MONDIAL_CITYOTHERNAME\nJOIN MONDIAL_COUNTRY ON MONDIAL_CITYOTHERNAME.COUNTRY = MONDIAL_COUNTRY.CODE\nWHERE MONDIAL_COUNTRY.AREA > 30000;",
            "sql_coder_oracle": "SELECT COUNT(DISTINCT MONDIAL_CITYOTHERNAME.CITY) AS number_of_cities\nFROM MONDIAL_CITYOTHERNAME\nJOIN MONDIAL_COUNTRY ON MONDIAL_CITYOTHERNAME.COUNTRY = MONDIAL_COUNTRY.CODE\nWHERE MONDIAL_COUNTRY.AREA > 30000;"
        },
        {
            "question": "Show the deserts with area greater than 10000",
            "tables": [
                "mondial_desert"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_DESERT\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_DESERT\" \n(\n  \"NAME\" VARCHAR(50), \n  \"AREA\" NUMERIC, \n  \"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\", \n  \"META_REPCOL\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT \"AREA\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_DESERT\"\nWHERE \"AREA\" > '10000'",
            "sql_coder_oracle": "SELECT \"AREA\"\nFROM \"MONDIAL_GPT\".\"MONDIAL_DESERT\"\nWHERE \"AREA\" > 10000"
        },
        {
            "question": "List the islands that belong to a lake with an elevation greater than 100",
            "tables": [
                "island",
                "lakeonisland",
                "lake"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"ISLAND\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"ISLANDS\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"TYPE\" VARCHAR2(15 BYTE), \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" \n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"LAKEONISLAND\" \n   (\t\"LAKE\" VARCHAR2(50 BYTE), \n\t\"ISLAND\" VARCHAR2(50 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"LAKE\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"RIVER\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"DEPTH\" NUMBER, \n\t\"HEIGHT\" NUMBER, \n\t\"TYPE\" VARCHAR2(12 BYTE), \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" \n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"ISLAND\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"ISLANDS\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"TYPE\" VARCHAR(15), \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" \n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"LAKEONISLAND\" \n   (\t\"LAKE\" VARCHAR(50), \n\t\"ISLAND\" VARCHAR(50)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"LAKE\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"RIVER\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"DEPTH\" NUMERIC, \n\t\"HEIGHT\" NUMERIC, \n\t\"TYPE\" VARCHAR(12), \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" \n   );",
            "sql_coder": "\nSELECT lake.name\nFROM lake\nWHERE lake.elevation > 100;",
            "sql_coder_oracle": "SELECT lake.name\nFROM lake\nWHERE lake.elevation > 100;"
        },
        {
            "question": "List all mountains located on islands with an area greater than 100,000 square kilometers",
            "tables": [
                "mondial_mountainonisland",
                "mondial_island"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_MOUNTAINONISLAND\" \n   (\t\"MOUNTAIN\" VARCHAR2(50 BYTE), \n\t\"ISLAND\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ISLAND\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"ISLANDS\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"TYPE\" VARCHAR2(10 BYTE), \n\t\"COORDINATES\" \"MONDIAL_GPT\".\"GEOCOORD\" , \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"mondial_gpt\".\"mondial_mountainonisland\"\n(\n    \"mountain\" VARCHAR(50),\n    \"island\" VARCHAR(50),\n    \"meta_repcol\" VARCHAR(4000)\n);\n\nCREATE TABLE \"mondial_gpt\".\"mondial_island\"\n(\n    \"name\" VARCHAR(50),\n    \"islands\" VARCHAR(50),\n    \"area\" NUMERIC,\n    \"elevation\" NUMERIC,\n    \"type\" VARCHAR(10),\n    \"coordinates\" \"mondial_gpt\".\"geocoord\",\n    \"meta_repcol\" VARCHAR(4000)\n);",
            "sql_coder": "\nSELECT \"mondial_gpt\".\"mondial_island\".\"area\"\nFROM \"mondial_gpt\".\"mondial_island\"\nWHERE \"mondial_gpt\".\"mondial_island\".\"name\" ILIKE '%Thailand%'",
            "sql_coder_oracle": "SELECT \"mondial_gpt\".\"mondial_island\".\"area\"\nFROM \"mondial_gpt\".\"mondial_island\"\nWHERE LOWER(\"mondial_gpt\".\"mondial_island\".\"name\") LIKE '%thailand%'"
        },
        {
            "question": "List the countries and the sum of their provincial areas.",
            "tables": [
                "mondial_country",
                "mondial_province"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"AREA\" NUMBER, \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"CAPPROV\" VARCHAR2(50 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_PROVINCE\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"POPULATION\" NUMERIC, \n\t\"AREA\" NUMERIC, \n\t\"CAPITAL\" VARCHAR(50), \n\t\"CAPPROV\" VARCHAR(50), \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_GPT.MONDIAL_COUNTRY.PROVINCE,\n       SUM(MONDIAL_GPT.MONDIAL_COUNTRY.AREA) AS total_area\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nWHERE MONDIAL_GPT.MONDIAL_COUNTRY.NAME = 'Thailand'\nGROUP BY MONDIAL_GPT.MONDIAL_COUNTRY.PROVINCE;",
            "sql_coder_oracle": "SELECT MONDIAL_GPT.MONDIAL_COUNTRY.PROVINCE,\n       SUM(MONDIAL_GPT.MONDIAL_COUNTRY.AREA) AS total_area\nFROM MONDIAL_GPT.MONDIAL_COUNTRY\nWHERE MONDIAL_GPT.MONDIAL_COUNTRY.NAME = 'Thailand'\nGROUP BY MONDIAL_GPT.MONDIAL_COUNTRY.PROVINCE;"
        },
        {
            "question": "Show the name of the countries, the average elevation and sum of the population of their cities",
            "tables": [
                "mondial_country",
                "mondial_city"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"POPULATION\" NUMBER, \n\t\"LATITUDE\" NUMBER, \n\t\"LONGITUDE\" NUMBER, \n\t\"ELEVATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   ) ; \n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_CITY\" \n  (\t\"NAME\" VARCHAR(50), \n\t\"COUNTRY\" VARCHAR(4), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"POPULATION\" NUMERIC, \n\t\"LATITUDE\" NUMERIC, \n\t\"LONGITUDE\" NUMERIC, \n\t\"ELEVATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n  ) ;",
            "sql_coder": "\nSELECT MONDIAL_COUNTRY.name,\n       AVG(MONDIAL_CITY.elevation) AS average_elevation,\n       SUM(MONDIAL_CITY.population) AS total_population\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_CITY ON MONDIAL_COUNTRY.code = MONDIAL_CITY.country\nWHERE MONDIAL_COUNTRY.name ilike '%Thailand%'\nGROUP BY MONDIAL_COUNTRY.name;",
            "sql_coder_oracle": "SELECT MONDIAL_COUNTRY.name,\n       AVG(MONDIAL_CITY.elevation) AS average_elevation,\n       SUM(MONDIAL_CITY.population) AS total_population\nFROM MONDIAL_COUNTRY\nJOIN MONDIAL_CITY ON MONDIAL_COUNTRY.code = MONDIAL_CITY.country\nWHERE LOWER(MONDIAL_COUNTRY.name) LIKE '%thailand%'\nGROUP BY MONDIAL_COUNTRY.name;"
        },
        {
            "question": "What was Germany's inflation?",
            "tables": [
                "mondial_country",
                "mondial_economy"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ECONOMY\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"GDP\" NUMBER, \n\t\"AGRICULTURE\" NUMBER, \n\t\"SERVICE\" NUMBER, \n\t\"INDUSTRY\" NUMBER, \n\t\"INFLATION\" NUMBER, \n\t\"UNEMPLOYMENT\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\n\t\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ECONOMY\" \n   (\n\t\"COUNTRY\" VARCHAR(4), \n\t\"GDP\" NUMERIC, \n\t\"AGRICULTURE\" NUMERIC, \n\t\"SERVICE\" NUMERIC, \n\t\"INDUSTRY\" NUMERIC, \n\t\"INFLATION\" NUMERIC, \n\t\"UNEMPLOYMENT\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );",
            "sql_coder": "\nSELECT MONDIAL_ECONOMY.INFLATION\nFROM MONDIAL_ECONOMY\nWHERE MONDIAL_ECONOMY.COUNTRY = 'DEU'",
            "sql_coder_oracle": "SELECT MONDIAL_ECONOMY.INFLATION\nFROM MONDIAL_ECONOMY\nWHERE MONDIAL_ECONOMY.COUNTRY = 'DEU'"
        },
        {
            "question": "What type of government is Iran?",
            "tables": [
                "mondial_country",
                "mondial_politics"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POLITICS\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"INDEPENDENCE\" DATE, \n\t\"WASDEPENDENT\" VARCHAR2(50 BYTE), \n\t\"DEPENDENT\" VARCHAR2(4 BYTE), \n\t\"GOVERNMENT\" VARCHAR2(120 BYTE), \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\"NAME\" VARCHAR(50), \n\t\"CODE\" VARCHAR(4), \n\t\"CAPITAL\" VARCHAR(50), \n\t\"PROVINCE\" VARCHAR(50), \n\t\"AREA\" NUMERIC, \n\t\"POPULATION\" NUMERIC, \n\t\"META_REPCOL\" VARCHAR(4000)\n   );\n\nCREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_POLITICS\" \n   (\"COUNTRY\" VARCHAR(4), \n\t\"INDEPENDENCE\" DATE, \n\t\"WASDEPENDENT\" VARCHAR(50), \n\t\"DEPENDENT\" VARCHAR(4), \n\t\"GOVERNMENT\" VARCHAR(120), \n\t\"META_REPCOL\" VARCHAR(4000)\n    );\n",
            "sql_coder": "\nSELECT MONDIAL_POLITICS.GOVERNMENT\nFROM MONDIAL_POLITICS\nWHERE MONDIAL_POLITICS.COUNTRY = 'IRN'",
            "sql_coder_oracle": "SELECT MONDIAL_POLITICS.GOVERNMENT\nFROM MONDIAL_POLITICS\nWHERE MONDIAL_POLITICS.COUNTRY = 'IRN'"
        },
        {
            "question": "What is the percentage of industries in relation to Japan's economy?",
            "tables": [
                "mondial_economy",
                "mondial_country"
            ],
            "ddl": "CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_ECONOMY\" \n   (\t\"COUNTRY\" VARCHAR2(4 BYTE), \n\t\"GDP\" NUMBER, \n\t\"AGRICULTURE\" NUMBER, \n\t\"SERVICE\" NUMBER, \n\t\"INDUSTRY\" NUMBER, \n\t\"INFLATION\" NUMBER, \n\t\"UNEMPLOYMENT\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;CREATE TABLE \"MONDIAL_GPT\".\"MONDIAL_COUNTRY\" \n   (\t\"NAME\" VARCHAR2(50 BYTE), \n\t\"CODE\" VARCHAR2(4 BYTE), \n\t\"CAPITAL\" VARCHAR2(50 BYTE), \n\t\"PROVINCE\" VARCHAR2(50 BYTE), \n\t\"AREA\" NUMBER, \n\t\"POPULATION\" NUMBER, \n\t\"META_REPCOL\" VARCHAR2(4000 BYTE)\n   ) SEGMENT CREATION IMMEDIATE \n  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 \n NOCOMPRESS LOGGING\n  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\n  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1\n  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\n  TABLESPACE \"MONDIAL_GPT\" ;",
            "ddl_postgres": "CREATE TABLE \"mondial_gpt\".\"mondial_economy\" \n   (\t\"country\" VARCHAR(4), \n\t\"gdp\" NUMERIC, \n\t\"agriculture\" NUMERIC, \n\t\"service\" NUMERIC, \n\t\"industry\" NUMERIC, \n\t\"inflation\" NUMERIC, \n\t\"unemployment\" NUMERIC, \n\t\"meta_repcol\" TEXT\n   );\n\nCREATE TABLE \"mondial_gpt\".\"mondial_country\" \n   (\t\"name\" VARCHAR(50), \n\t\"code\" VARCHAR(4), \n\t\"capital\" VARCHAR(50), \n\t\"province\" VARCHAR(50), \n\t\"area\" NUMERIC, \n\t\"population\" NUMERIC, \n\t\"meta_repcol\" TEXT\n   );",
            "sql_coder": "\nSELECT industry /\n  (SELECT industry\n   FROM mondial_gpt.mondial_economy\n   WHERE country = 'Japan') * 100 AS percentage\nFROM mondial_gpt.mondial_economy\nWHERE country = 'Japan';",
            "sql_coder_oracle": "SELECT industry /\n  (SELECT industry\n   FROM mondial_gpt.mondial_economy\n   WHERE country = 'Japan') * 100 AS percentage\nFROM mondial_gpt.mondial_economy\nWHERE country = 'Japan';"
        }
    ]
}